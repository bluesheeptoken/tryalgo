Search.setIndex({"docnames": ["auto_examples/arithm_expr_target", "auto_examples/coin_change", "auto_examples/index", "content", "index", "install", "quickstart", "tryalgo/modules", "tryalgo/tryalgo"], "filenames": ["auto_examples/arithm_expr_target.rst", "auto_examples/coin_change.rst", "auto_examples/index.rst", "content.rst", "index.rst", "install.rst", "quickstart.rst", "tryalgo/modules.rst", "tryalgo/tryalgo.rst"], "titles": ["Countdown", "Coin change", "Gallery of examples", "Content of the library", "Welcome to tryalgo\u2019s documentation!", "Installation", "Quick start", "tryalgo", "tryalgo package"], "terms": {"click": [0, 1], "here": [0, 1, 2, 3, 6, 8], "download": [0, 1, 2, 5], "full": [0, 1], "exampl": [0, 1, 3, 4, 6, 8], "code": [0, 1, 2, 3, 6, 8], "from": [0, 1, 2, 3, 4, 6, 8], "tryalgo": [0, 1, 2, 3, 5, 6], "arithm_expr_target": [0, 3, 7], "import": [0, 1, 3, 6], "25": [0, 8], "50": 0, "75": 0, "100": 0, "3": [0, 1, 3, 6, 8], "6": [0, 1, 6], "952": 0, "return": [0, 3, 6, 8], "see": [0, 3], "our": [0, 1, 3, 6, 8], "blog": [0, 1, 8], "origin": 0, "video": 0, "behind": 0, "thi": [0, 1, 3, 4, 6, 8], "total": [0, 1, 3, 8], "run": [0, 1, 3, 8], "time": [0, 1, 3, 8], "script": [0, 1], "0": [0, 1, 3, 6, 8], "minut": [0, 1], "000": [0, 1], "second": [0, 1, 3], "python": [0, 1, 2, 3, 4, 5, 8], "sourc": [0, 1, 2, 3, 6, 8], "py": [0, 1], "jupyt": [0, 1, 2], "notebook": [0, 1, 2], "ipynb": [0, 1], "galleri": [0, 1, 4], "gener": [0, 1, 2, 3, 8], "sphinx": [0, 1, 2], "coin_chang": [1, 6, 7, 8], "subsetsum": [1, 3, 7], "print": [1, 3, 6], "5": [1, 6], "11": [1, 6, 8], "29": [1, 6], "true": [1, 6, 8], "becaus": [1, 6], "x": [1, 3, 8], "1": [1, 3, 6, 8], "an": [1, 3, 6, 8], "explan": [1, 8], "i": [1, 3, 6, 8], "given": [1, 3, 8], "french": [1, 3, 4], "org": 1, "cl\u00e9menc": 1, "r\u00e9da": 1, "rendu": 1, "de": [1, 4, 8], "monnai": 1, "base": [1, 3, 8], "programm": [1, 4, 8], "dynamiqu": 1, "ar": [2, 3, 4, 6, 8], "some": [2, 3, 8], "packag": [2, 5, 7], "countdown": 2, "coin": [2, 3, 4, 8], "chang": [2, 3, 4, 7, 8], "all": [2, 3, 8], "auto_examples_python": 2, "zip": 2, "auto_examples_jupyt": 2, "The": [3, 5, 6, 8], "main": 3, "purpos": 3, "present": [3, 8], "easi": 3, "implement": [3, 4, 6, 8], "so": 3, "prioriti": 3, "wa": [3, 8], "put": 3, "simplic": 3, "readabl": 3, "rather": 3, "than": [3, 8], "effici": 3, "For": [3, 6], "even": [3, 8], "though": 3, "dijkstra": [3, 6, 7], "": [3, 6, 8], "ha": [3, 8], "best": 3, "worst": [3, 8], "case": [3, 8], "complex": [3, 8], "when": [3, 8], "fibonacci": 3, "heap": [3, 8], "we": [3, 6, 8], "choos": [3, 8], "simpler": 3, "which": [3, 6, 8], "have": [3, 8], "wors": 3, "still": 3, "accept": 3, "organ": 3, "problem": [3, 4, 8], "class": [3, 8], "follow": [3, 6, 8], "illustr": 3, "how": [3, 8], "read": [3, 7, 8], "standard": [3, 8], "input": [3, 8], "write": [3, 8], "output": 3, "us": [3, 5, 6, 8], "freivald": [3, 7], "test": [3, 8], "n": [3, 8], "matric": [3, 8], "A": [3, 8], "b": [3, 8], "c": [3, 8], "goal": 3, "decid": [3, 8], "whether": [3, 8], "ab": [3, 8], "naiv": [3, 8], "would": [3, 6], "o": [3, 8], "But": 3, "random": [3, 7, 8], "vector": [3, 8], "2": [3, 6, 8], "abx": 3, "cx": 3, "It": [3, 8], "can": [3, 5, 6, 8], "shown": [3, 8], "probabl": [3, 8], "fail": 3, "detect": [3, 8], "differ": [3, 8], "negligibli": 3, "small": [3, 8], "simpl": [3, 8], "first": [3, 6, 8], "out": 3, "queue": [3, 8], "our_queu": [3, 7], "well": 3, "our_heap": [3, 7], "union": [3, 7, 8], "find": [3, 6, 7, 8], "permit": [3, 8], "maintain": [3, 8], "partit": [3, 8], "item": [3, 8], "typic": 3, "vertic": [3, 8], "oper": [3, 8], "y": [3, 8], "merg": [3, 7, 8], "two": [3, 8], "contain": [3, 5, 6, 8], "canon": 3, "element": [3, 8], "kruskal": [3, 7], "order": [3, 6, 7, 8], "tupl": [3, 8], "lexicograph": [3, 8], "major": [3, 7], "identifi": [3, 8], "list": [3, 6, 8], "quit": 3, "sort": [3, 8], "closest_valu": [3, 7], "closest": [3, 8], "valu": [3, 8], "sweeplin": [3, 8], "techniqu": [3, 8], "mani": [3, 8], "comput": [3, 4, 6, 8], "geometr": 3, "In": [3, 6, 8], "max_interval_intersec": [3, 7], "maximum": [3, 8], "number": [3, 8], "among": 3, "other": [3, 8], "includ": [3, 8], "greedi": 3, "scalar": [3, 7], "permut": [3, 8], "minim": [3, 8], "product": [3, 8], "sometim": 3, "conveni": 3, "encod": [3, 6, 8], "over": [3, 8], "univers": [3, 8], "bit": [3, 8], "integ": [3, 8], "express": [3, 6, 8], "reach": [3, 8], "close": [3, 8], "possibl": [3, 6], "target": [3, 8], "binary_search": [3, 7], "variant": [3, 8], "binari": [3, 8], "search": [3, 6, 7, 8], "ternary_search": [3, 7, 8], "biton": [3, 8], "function": [3, 6, 8], "logarithm": 3, "size": [3, 8], "veri": 3, "interest": 3, "call": [3, 6, 8], "partitionrefin": [3, 7, 8], "refin": [3, 7, 8], "split": [3, 8], "each": [3, 8], "part": [3, 8], "p": [3, 8], "current": 3, "linear": [3, 6, 8], "anagram": [3, 7], "letter": 3, "form": [3, 8], "show": 3, "mobil": [3, 8], "phone": [3, 8], "exist": [3, 8], "befor": 3, "smart": 3, "had": 3, "type": [3, 8], "text": [3, 8], "messag": 3, "kei": [3, 7, 8], "9": [3, 6, 8], "digit": 3, "map": [3, 8], "predict": [3, 8], "most": [3, 8], "like": 3, "user": 3, "want": [3, 6], "frequenc": [3, 8], "augment": 3, "dictionari": [3, 6, 8], "predictive_text": [3, 7], "done": [3, 8], "eleg": 3, "known": [3, 6], "manach": [3, 6, 7], "palindrom": [3, 4, 8], "substr": [3, 4, 8], "studi": 3, "t": [3, 8], "insid": 3, "solv": [3, 7, 8], "knuth_morris_pratt": [3, 7], "longest": [3, 4, 8], "border": [3, 8], "prefix": [3, 8], "w": [3, 8], "maximum_border_length": [3, 7, 8], "also": [3, 6], "One": 3, "applic": 3, "largest": [3, 8], "power": [3, 8], "k": [3, 8], "result": 3, "concaten": 3, "copi": 3, "altern": [3, 8], "been": [3, 8], "rabin": [3, 8], "karp": [3, 8], "rabin_karp": [3, 7], "advantag": 3, "multipl": [3, 8], "pattern": 3, "dimens": [3, 8], "common": [3, 8], "trie": [3, 7], "store": [3, 8], "allow": [3, 8], "spell": 3, "error": 3, "one": [3, 8], "need": [3, 6, 8], "checker": 3, "dynam": [3, 6, 8], "program": [3, 6, 8], "classic": 3, "edit": [3, 8], "distanc": [3, 6, 8], "levenshtein": [3, 7], "between": [3, 8], "subsequ": [3, 8], "longest_common_subsequ": [3, 7], "increas": [3, 8], "longest_increasing_subsequ": [3, 7], "consist": [3, 5, 8], "merge_ordered_list": [3, 7], "area": [3, 7, 8], "cach": 3, "maxim": [3, 8], "where": [3, 6, 8], "fault": 3, "happen": 3, "inclus": 3, "wise": 3, "distinct": [3, 8], "slide": [3, 8], "window": [3, 8], "windows_k_distinct": [3, 7], "object": [3, 8], "possibli": [3, 8], "implicit": 3, "manner": 3, "access": [3, 8], "modif": 3, "queri": [3, 7, 8], "rang": [3, 8], "minimum": [3, 8], "modifi": [3, 8], "individu": 3, "indic": [3, 8], "segment": [3, 8], "range_minimum_queri": [3, 7], "There": 3, "cute": 3, "lazysegmenttre": [3, 7, 8], "updat": [3, 7, 8], "index": [3, 4, 6, 8], "ad": [3, 8], "same": [3, 8], "ask": 3, "sum": [3, 7, 8], "similar": [3, 8], "fenwick": [3, 7], "again": 3, "cover": [3, 7, 8], "nice": 3, "select": [3, 8], "those": [3, 8], "interval_tre": [3, 7], "smallest": [3, 8], "hit": 3, "intersect": [3, 8], "sweep": [3, 8], "line": [3, 6, 8], "mention": 3, "abov": [3, 6], "interval_cov": [3, 7], "your": [3, 6], "adjac": [3, 6, 8], "th": [3, 8], "vertex": [3, 6, 8], "label": [3, 8], "edg": [3, 6, 8], "separ": [3, 8], "listlist": [3, 6, 8], "format": [3, 6, 8], "contrast": 3, "neighbor": [3, 6, 8], "attach": 3, "weight": [3, 6, 8], "listdict": [3, 6, 8], "undirect": [3, 8], "repres": [3, 6, 8], "direct": [3, 8], "duplic": 3, "opposit": 3, "face": 3, "arc": [3, 6, 8], "work": 3, "document": [3, 8], "pad": [3, 7, 8], "u": [3, 6, 8], "v": [3, 6, 8], "represent": [3, 6, 8], "node": [3, 6, 7, 8], "ani": [3, 8], "hashabl": [3, 8], "dictdict": 3, "provid": 3, "convert": [3, 7, 8], "name": [3, 5, 8], "matrix_to_listlist": [3, 7, 8], "listlist_and_matrix_to_listdict": [3, 7, 8], "listdict_to_listlist_and_matrix": [3, 7, 8], "dictdict_to_listdict": [3, 7, 8], "sever": [3, 5], "tabl": [3, 6, 8], "root": [3, 8], "refer": 3, "descend": 3, "anteced": 3, "none": [3, 6, 8], "helper": 3, "file": [3, 5, 8], "dot": [3, 8], "modul": [3, 4, 5, 7], "explor": [3, 8], "along": [3, 8], "connect": [3, 8], "compon": [3, 8], "depth": [3, 8], "df": [3, 7], "its": [3, 8], "iter": [3, 8], "recurs": [3, 8], "special": 3, "grid": [3, 8], "breadth": [3, 8], "bf": [3, 7], "cut": [3, 8], "remov": [3, 7, 8], "defin": [3, 8], "similarli": 3, "determin": [3, 8], "biconnect": 3, "particular": 3, "pair": [3, 8], "disjoint": [3, 8], "These": 3, "commun": 3, "network": 3, "subtl": 3, "biconnected_compon": [3, 7], "topolog": [3, 8], "everi": [3, 8], "point": [3, 8], "onli": [3, 8], "left": [3, 8], "right": [3, 8], "topological_ord": [3, 7], "anoth": 3, "strongli": [3, 8], "them": 3, "tarjan": [3, 7, 8], "kosaraju": [3, 7, 8], "strongly_connected_compon": [3, 7], "resolut": 3, "sat": [3, 8], "boolean": [3, 8], "formula": [3, 8], "two_sat": [3, 7], "polynomi": [3, 8], "horn": [3, 8], "horn_sat": [3, 7], "4": [3, 6, 8], "third": 3, "length": [3, 8], "And": 3, "visit": [3, 8], "exactli": [3, 8], "onc": [3, 8], "e": [3, 8], "find_cycl": [3, 7, 8], "cdot": 3, "breath": 3, "shortest_cycl": [3, 7], "bellman": [3, 8], "ford": [3, 8], "bellman_ford": [3, 7], "mean": [3, 8], "min_mean_cycl": [3, 7], "eulerian": [3, 8], "both": [3, 6, 8], "eulerian_tour": [3, 7], "appli": 3, "thei": 3, "summar": 3, "assum": [3, 8], "geq": 3, "unweight": [3, 8], "adapt": 3, "dist_grid": [3, 7], "dequ": 3, "graph01": [3, 7], "non": [3, 8], "neg": [3, 8], "log": [3, 8], "arbitrari": [3, 8], "destin": 3, "floyd": [3, 8], "warshal": [3, 8], "floyd_warshal": [3, 7], "cardin": [3, 8], "bipartit": [3, 8], "bipartite_match": [3, 7], "reduct": [3, 8], "bipartite_vertex_cov": [3, 7], "profit": [3, 8], "hungarian": 3, "kuhn_munkr": [3, 7], "stabl": [3, 8], "gale": [3, 8], "shaplei": [3, 8], "gale_shaplei": [3, 7], "max": [3, 7, 8], "capac": [3, 8], "fulkerson": [3, 8], "ford_fulkerson": [3, 7], "edmond": [3, 8], "edmonds_karp": [3, 7], "dinic": [3, 7], "decomposit": 3, "acycl": [3, 8], "dilworth": [3, 7], "construct": [3, 8], "optim": [3, 8], "huffman": [3, 7], "found": [3, 8], "famou": 3, "span": [3, 8], "lowest": [3, 6, 8], "ancestor": [3, 8], "build": [3, 8], "answer": 3, "solut": [3, 8], "lowest_common_ancestor": [3, 7], "insert": [3, 7, 8], "delet": 3, "skip": [3, 8], "expect": [3, 8], "cost": [3, 6, 8], "knapsack": [3, 7], "wish": 3, "subset": [3, 8], "doe": [3, 8], "exce": 3, "np": 3, "hard": 3, "nc": 3, "bound": [3, 8], "collect": 3, "unbound": 3, "up": [3, 7, 8], "method": [3, 8], "larg": 3, "lceil": [3, 8], "rceil": [3, 8], "subsetsum_divid": [3, 7], "convex": [3, 8], "hull": [3, 8], "euclidean": [3, 8], "space": [3, 8], "book": [3, 4, 8], "graham": 3, "made": 3, "choic": 3, "andrew": [3, 7, 8], "avoid": 3, "trigonometr": 3, "convex_hul": [3, 7], "With": [3, 4], "without": [3, 8], "more": [3, 8], "tricki": 3, "less": [3, 8], "divid": 3, "conquer": 3, "approach": [3, 8], "closest_point": [3, 7], "pareto": [3, 7], "domin": [3, 8], "sai": 3, "smaller": 3, "coordin": [3, 8], "strictli": [3, 8], "least": [3, 8], "polygon": [3, 7], "rectilinear": [3, 8], "verifi": 3, "is_simpl": [3, 7, 8], "puzzl": 3, "lot": 3, "plane": 3, "corner": [3, 8], "rectangl": [3, 8], "rectangles_from_point": [3, 7], "speak": 3, "amort": [3, 8], "analysi": 3, "under": [3, 8], "histogram": [3, 8], "rectangles_from_histogram": [3, 7], "matrix": [3, 6, 8], "rectangular": [3, 8], "sub": 3, "ones": 3, "rectangles_from_grid": [3, 7], "union_rectangl": [3, 7], "prime": [3, 7], "easili": 3, "eratosthen": [3, 7, 8], "Its": 3, "improv": [3, 8], "gri": [3, 8], "misra": [3, 8], "siev": [3, 8], "produc": [3, 8], "posit": [3, 6, 8], "factor": [3, 8], "greatest": [3, 8], "divisor": [3, 8], "gcd": 3, "english": 3, "pgcd": [3, 7, 8], "bezot": 3, "coeffici": [3, 8], "binomi": [3, 8], "arithm": [3, 7], "fast": [3, 8], "exponenti": [3, 8], "fast_exponenti": [3, 7], "evalu": [3, 8], "stack": 3, "intermedi": 3, "arithm_expr_ev": [3, 7], "system": [3, 8], "equat": [3, 8], "gauss": [3, 8], "jordan": [3, 8], "triangul": 3, "gauss_jordan": [3, 7], "multipli": [3, 8], "matter": 3, "place": 3, "parenthesi": 3, "good": 3, "necessari": 3, "matrix_chain_mult": [3, 7], "roman_numb": [3, 7], "roman": [3, 8], "vice": 3, "versa": 3, "suppos": [3, 6], "you": [3, 5, 6, 8], "let": 3, "karatsuba": [3, 7], "585": [3, 8], "add": [3, 7, 8], "substruct": 3, "howev": 3, "fourier": [3, 8], "transform": [3, 8], "fft": [3, 7], "correspond": [3, 8], "invers": [3, 8], "inv_fft": [3, 7, 8], "mul_poly_fft": [3, 7, 8], "attack": 3, "brute": 3, "forc": 3, "laser_mirror": [3, 7], "cell": [3, 8], "side": 3, "mirror": [3, 8], "orient": [3, 8], "angl": 3, "45": 3, "225": 3, "degre": [3, 8], "trajectori": 3, "laser": [3, 8], "beam": [3, 8], "enter": 3, "specif": 3, "roll": 3, "royc": 3, "danc": [3, 8], "link": [3, 8], "exact": [3, 8], "dancing_link": [3, 7], "sudoku": [3, 7], "final": 3, "procedur": 3, "next_permut": [3, 7], "take": 3, "next": [3, 8], "hope": 3, "instruct": [3, 8], "If": [3, 6, 8], "miss": 3, "know": 3, "might": [3, 6], "look": 3, "networkx": 3, "librari": [4, 5, 8], "variou": 4, "algorithm": [4, 6, 8], "data": [4, 6, 8], "structur": [4, 6, 8], "graph": [4, 6, 7], "string": [4, 8], "geometri": 4, "proof": 4, "correct": 4, "avail": 4, "languag": [4, 8], "efficac": [4, 8], "le": [4, 8], "128": [4, 8], "qu": [4, 8], "il": [4, 8], "faut": [4, 8], "avoir": [4, 8], "compri": [4, 8], "et": [4, 8], "cod\u00e9": [4, 8], "en": [4, 8], "au": 4, "cour": 4, "sa": 4, "vie": [4, 8], "instal": 4, "pip": 4, "pypi": 4, "quick": [4, 8], "start": [4, 8], "pathfind": 4, "content": [4, 7], "basic": 4, "sequenc": [4, 8], "arrai": [4, 8], "interv": [4, 8], "cycl": [4, 8], "shortest": [4, 6, 8], "path": [4, 6, 8], "match": [4, 7, 8], "flow": [4, 8], "relat": 4, "tree": [4, 6, 8], "set": [4, 7, 8], "arithmet": [4, 8], "backtrack": 4, "github": 4, "project": [4, 8], "pip3": 5, "tar": 5, "gz": 5, "extract": [5, 7, 8], "directori": 5, "usr": 6, "bin": 6, "env": 6, "python3": 6, "should": [6, 8], "combin": [6, 8], "babcbabcbaccba": 6, "10": [6, 8], "inde": 6, "exclud": [6, 8], "abcbabcba": 6, "now": 6, "simpli": 6, "squar": [6, 8], "7": 6, "8": 6, "_": 6, "predecessor": [6, 8], "describ": [6, 8], "dist": [6, 7, 8], "prec": [6, 8], "Will": 6, "while": 6, "append": 6, "spars": [6, 8], "few": 6, "formal": 6, "belong": 6, "henc": 6, "invok": 6, "wai": 6, "submodul": 7, "bezout": [7, 8], "binom": [7, 8], "binom_modulo": [7, 8], "inv": [7, 8], "arithm_expr_pars": [7, 8], "bellman_ford2": [7, 8], "cut_nodes_edg": [7, 8], "cut_nodes_edges2": [7, 8], "continuous_binary_search": [7, 8], "discrete_binary_search": [7, 8], "optimized_binary_search": [7, 8], "optimized_binary_search_low": [7, 8], "max_bipartite_match": [7, 8], "max_bipartite_matching2": [7, 8], "dfs_grid": [7, 8], "dfs_grid_recurs": [7, 8], "dfs_iter": [7, 8], "dfs_recurs": [7, 8], "dfs_tree": [7, 8], "dijkstra_update_heap": [7, 8], "eulerian_tour_direct": [7, 8], "eulerian_tour_undirect": [7, 8], "is_eulerian_tour": [7, 8], "random_eulerien_graph": [7, 8], "write_cycl": [7, 8], "fast_exponentiation2": [7, 8], "get": [7, 8], "intervaladd": [7, 8], "intervalsum": [7, 8], "prefixsum": [7, 8], "fenwickmin": [7, 8], "prefixmin": [7, 8], "floyd_warshall2": [7, 8], "add_arc": [7, 8], "add_edg": [7, 8], "add_nod": [7, 8], "add_reverse_arc": [7, 8], "extract_path": [7, 8], "make_flow_label": [7, 8], "read_graph": [7, 8], "readtab": [7, 8], "readval": [7, 8], "tree_adj_to_prec": [7, 8], "tree_prec_to_adj": [7, 8], "write_graph": [7, 8], "dist01": [7, 8], "intervals_contain": [7, 8], "intervals_union": 7, "add_poli": [7, 8], "eval_poli": [7, 8], "mul_poli": [7, 8], "sub_poli": [7, 8], "knapsack2": [7, 8], "powerstring_by_bord": [7, 8], "powerstring_by_find": [7, 8], "unionfind": [7, 8], "kuhn_munkres_n4": 7, "left_right_invers": 7, "lowestcommonancestorrmq": [7, 8], "lowestcommonancestorshortcut": [7, 8], "log2ceil": [7, 8], "log2floor": [7, 8], "matrix_mult_opt_ord": [7, 8], "solve_word_addit": [7, 8], "ourheap": [7, 8], "down": [7, 8], "pop": [7, 8], "push": [7, 8], "ourqueu": [7, 8], "our_std": 7, "readarrai": [7, 8], "readint": [7, 8], "readmatrix": [7, 8], "readstr": [7, 8], "pareto2d": [7, 8], "pareto3d": [7, 8], "partition_refin": 7, "tolist": [7, 8], "permutation_rank": 7, "rank_permut": [7, 8], "propos": [7, 8], "gries_misra": [7, 8], "rabin_karp_factor": [7, 8], "rabin_karp_match": [7, 8], "roll_hash": [7, 8], "min": [7, 8], "rangeminqueri": [7, 8], "range_min": [7, 8], "int2roman": [7, 8], "roman2int": [7, 8], "min_scalar_prod": [7, 8], "powergraph": [7, 8], "skip_list": 7, "abstractskiplist": [7, 8], "getkth": [7, 8], "lastkei": [7, 8], "nextkei": [7, 8], "nextnod": [7, 8], "randomheight": [7, 8], "sorteddict": [7, 8], "sortedset": [7, 8], "revers": [7, 8], "tarjan_recursif": [7, 8], "subset_sum": [7, 8], "part_sum": [7, 8], "part_sum2": [7, 8], "subset_sum2": [7, 8], "three_partit": 7, "topological_order_df": [7, 8], "trienod": [7, 8], "spell_check": [7, 8], "coverqueri": [7, 8], "rectangles_contains_point": [7, 8], "union_interv": [7, 8], "union_rectangles_fast": [7, 8], "union_rectangles_fastest": [7, 8], "union_rectangles_na": [7, 8], "christoph": 8, "d\u00fcrr": 8, "jill": 8, "j\u00eann": 8, "2013": 8, "2019": 8, "group": 8, "word": 8, "paramet": 8, "averag": 8, "due": 8, "usag": 8, "b\u00e9zout": 8, "modulo": 8, "mathbb": 8, "z": 8, "_p": 8, "jenn": 8, "durr": 8, "2014": 8, "2020": 8, "expr": 8, "variabl": 8, "numer": 8, "line_token": 8, "token": 8, "creat": 8, "jean": 8, "filli\u00e2tr": 8, "param": 8, "constant": 8, "huge": 8, "singl": 8, "2018": 8, "preced": 8, "bool": 8, "circuit": 8, "reachabl": 8, "inf": 8, "2015": 8, "int": 8, "bi": 8, "loui": 8, "abraham": 8, "cannot": 8, "about": 8, "5000": 8, "otherwis": 8, "memori": 8, "limit": 8, "f": 8, "lo": 8, "hi": 8, "gap": 8, "0001": 8, "monoton": 8, "float": 8, "precis": 8, "tab": 8, "logsiz": 8, "textrm": 8, "fals": 8, "last": 8, "1e": 8, "ternari": 8, "decreas": 8, "necessarili": 8, "biparti": 8, "bigraph": 8, "assumpt": 8, "len": 8, "iff": 8, "comment": 8, "koenig": 8, "theorem": 8, "trouver": 8, "la": 8, "plu": 8, "proch": 8, "requir": 8, "q": 8, "l": 8, "size_univers": 8, "j": 8, "mark": 8, "free": 8, "version": 8, "neighborhood": 8, "symbol": 8, "walkabl": 8, "overwrit": 8, "seen": 8, "stop": 8, "negatif": 8, "infinit": 8, "decompos": 8, "dag": 8, "chain": 8, "give": 8, "skew": 8, "symmetr": 8, "row": 8, "column": 8, "ind_ic": 8, "tour": 8, "membership": 8, "filenam": 8, "written": 8, "noth": 8, "pow": 8, "shorter": 8, "val": 8, "virtual": 8, "infin": 8, "2022": 8, "sampl": 8, "zero": 8, "make": 8, "pascal": 8, "ortiz": 8, "max_capac": 8, "high": 8, "men": 8, "women": 8, "prefer": 8, "ax": 8, "m": 8, "uniqu": 8, "2m": 8, "name_u": 8, "name_v": 8, "weight_uv": 8, "util": 8, "default": 8, "ignor": 8, "dictgraph": 8, "dict": 8, "name_to_nod": 8, "node_to_nam": 8, "lead": 8, "coupl": 8, "option": 8, "listdic": 8, "entri": 8, "default_weight": 8, "plain": 8, "Then": 8, "three": 8, "fi": 8, "ty": 8, "stream": 8, "sy": 8, "stdin": 8, "successor": 8, "except": 8, "dotfil": 8, "node_label": 8, "arc_label": 8, "node_mark": 8, "arc_mark": 8, "grai": 8, "arc_marc": 8, "red": 8, "2016": 8, "claus": 8, "posvar_in_claus": 8, "clause_with_negvar": 8, "score": 8, "sol": 8, "pool": 8, "posvar": 8, "negvar": 8, "empti": 8, "satisfi": 8, "els": 8, "var": 8, "liter": 8, "d": 8, "initi": 8, "leaf": 8, "inner": 8, "left_sub_tre": 8, "right_sub_tre": 8, "01": 8, "charact": 8, "freq": 8, "half": 8, "open": 8, "assert": 8, "low": 8, "addit": 8, "log_2": 8, "subtruct": 8, "vectr": 8, "cmax": 8, "bag": 8, "behavior": 8, "knuth": 8, "morri": 8, "pratt": 8, "inspir": 8, "practic": 8, "lesson": 8, "tp": 8, "yve": 8, "lemair": 8, "haystack": 8, "needl": 8, "x_index": 8, "complex_index": 8, "inverse_ackerman": 8, "y_index": 8, "alreadi": 8, "kuhn": 8, "munkr": 8, "samuel": 8, "tardieu": 8, "primal": 8, "lp": 8, "sum_": 8, "sum_v": 8, "sum_u": 8, "dual": 8, "trivial": 8, "complementari": 8, "slack": 8, "condit": 8, "g": 8, "toler": 8, "06": 8, "absolut": 8, "below": 8, "consid": 8, "being": 8, "fraction": 8, "chosen": 8, "complet": 8, "perfect": 8, "just": 8, "col": 8, "mir": 8, "entranc": 8, "exit": 8, "succ": 8, "orien": 8, "direc": 8, "leav": 8, "compar": 8, "shortcut": 8, "round": 8, "appear": 8, "tie": 8, "break": 8, "nk": 8, "2k": 8, "http": 8, "leetcod": 8, "com": 8, "2011": 8, "ii": 8, "html": 8, "probl\u00e8m": 8, "long": 8, "entr\u00e9": 8, "cha\u00een": 8, "sorti": 8, "tel": 8, "que": 8, "est": 8, "un": 8, "complexit\u00e9": 8, "temp": 8, "lin\u00e9air": 8, "tou": 8, "r\u00e9f\u00e8rent": 8, "\u00e0": 8, "fictiv": 8, "si": 8, "abaa": 8, "invari": 8, "pour": 8, "chaqu": 8, "pr\u00e9fix": 8, "vu": 8, "maintient": 8, "centr\u00e9": 8, "bord": 8, "droit": 8, "r": 8, "qui": 8, "maximis": 8, "ainsi": 8, "grand": 8, "rayon": 8, "whatev": 8, "opt": 8, "arg": 8, "nondecreas": 8, "prochain": 8, "permuat": 8, "ass": 8, "cryptogram": 8, "style": 8, "send": 8, "monei": 8, "actual": 8, "rank": 8, "init": 8, "new": 8, "old": 8, "replac": 8, "fifo": 8, "__str__": 8, "obj": 8, "typ": 8, "nlog": 8, "preserv": 8, "after": 8, "15": 8, "nonsens": 8, "move": 8, "back": 8, "flatten": 8, "pivot": 8, "setminu": 8, "accord": 8, "bewar": 8, "big": 8, "equal": 8, "mesur": 8, "taken": 8, "segement": 8, "do": 8, "dic": 8, "associ": 8, "highest": 8, "prop": 8, "seq": 8, "wrapper": 8, "nombr": 8, "premier": 8, "loglog": 8, "check": 8, "loop": 8, "eas": 8, "old_val": 8, "out_digit": 8, "in_digit": 8, "last_po": 8, "plage": 8, "minrangequeri": 8, "act": 8, "valid": 8, "neutral": 8, "clear": 8, "maxval": 8, "minval": 8, "sumval": 8, "respons": 8, "clean": 8, "lazyset": 8, "lazyadd": 8, "suspendet": 8, "propag": 8, "descent": 8, "subtre": 8, "monochromatiqu": 8, "black": 8, "fill": 8, "top": 8, "bottom": 8, "h": 8, "height": 8, "rect": 8, "9999": 8, "sens": 8, "decod": 8, "sigma": 8, "finn": 8, "voelkel": 8, "footnot": 8, "pariti": 8, "cycle_len": 8, "request": 8, "2017": 8, "kunigami": 8, "2012": 8, "09": 8, "count": 8, "www": 8, "bgu": 8, "ac": 8, "ds112": 8, "wiki": 8, "ds112_ps7": 8, "pdf": 8, "static": 8, "alia": 8, "field": 8, "composant": 8, "fortement": 8, "connex": 8, "x_tabl": 8, "index_t": 8, "suffix_t": 8, "r_target": 8, "nanpur": 8, "could": 8, "usual": 8, "publish": 8, "9x9": 8, "triplet": 8, "2n": 8, "indegre": 8, "correcteur": 8, "orthographiqu": 8, "spellcheck": 8, "x1": 8, "xn": 8, "x3": 8, "assign": 8, "offset": 8, "either": 8, "counter": 8, "minu": 8, "multiset": 8, "horizont": 8, "process": 8, "yet": 8, "y1": 8, "x2": 8, "y2": 8, "yield": 8, "cnr": 8, "sorbonn": 8, "universit\u00e9": 8, "lip6": 8, "pari": 8, "inria": 8, "lill": 8, "editor": 8, "ellips": 8}, "objects": {"": [[8, 0, 0, "-", "tryalgo"]], "tryalgo": [[8, 0, 0, "-", "anagrams"], [8, 0, 0, "-", "arithm"], [8, 0, 0, "-", "arithm_expr_eval"], [8, 0, 0, "-", "arithm_expr_target"], [8, 0, 0, "-", "bellman_ford"], [8, 0, 0, "-", "bfs"], [8, 0, 0, "-", "biconnected_components"], [8, 0, 0, "-", "binary_search"], [8, 0, 0, "-", "bipartite_matching"], [8, 0, 0, "-", "bipartite_vertex_cover"], [8, 0, 0, "-", "closest_points"], [8, 0, 0, "-", "closest_values"], [8, 0, 0, "-", "convex_hull"], [8, 0, 0, "-", "dancing_links"], [8, 0, 0, "-", "dfs"], [8, 0, 0, "-", "dijkstra"], [8, 0, 0, "-", "dilworth"], [8, 0, 0, "-", "dinic"], [8, 0, 0, "-", "dist_grid"], [8, 0, 0, "-", "edmonds_karp"], [8, 0, 0, "-", "eulerian_tour"], [8, 0, 0, "-", "fast_exponentiation"], [8, 0, 0, "-", "fenwick"], [8, 0, 0, "-", "fft"], [8, 0, 0, "-", "floyd_warshall"], [8, 0, 0, "-", "ford_fulkerson"], [8, 0, 0, "-", "freivalds"], [8, 0, 0, "-", "gale_shapley"], [8, 0, 0, "-", "gauss_jordan"], [8, 0, 0, "-", "graph"], [8, 0, 0, "-", "graph01"], [8, 0, 0, "-", "horn_sat"], [8, 0, 0, "-", "huffman"], [8, 0, 0, "-", "interval_cover"], [8, 0, 0, "-", "interval_tree"], [8, 0, 0, "-", "intervals_union"], [8, 0, 0, "-", "karatsuba"], [8, 0, 0, "-", "knapsack"], [8, 0, 0, "-", "knuth_morris_pratt"], [8, 0, 0, "-", "kruskal"], [8, 0, 0, "-", "kuhn_munkres"], [8, 0, 0, "-", "kuhn_munkres_n4"], [8, 0, 0, "-", "laser_mirrors"], [8, 0, 0, "-", "left_right_inversions"], [8, 0, 0, "-", "levenshtein"], [8, 0, 0, "-", "longest_common_subsequence"], [8, 0, 0, "-", "longest_increasing_subsequence"], [8, 0, 0, "-", "lowest_common_ancestor"], [8, 0, 0, "-", "majority"], [8, 0, 0, "-", "manacher"], [8, 0, 0, "-", "matrix_chain_mult"], [8, 0, 0, "-", "max_interval_intersec"], [8, 0, 0, "-", "merge_ordered_lists"], [8, 0, 0, "-", "min_mean_cycle"], [8, 0, 0, "-", "next_permutation"], [8, 0, 0, "-", "our_heap"], [8, 0, 0, "-", "our_queue"], [8, 0, 0, "-", "our_std"], [8, 0, 0, "-", "pareto"], [8, 0, 0, "-", "partition_refinement"], [8, 0, 0, "-", "permutation_rank"], [8, 0, 0, "-", "polygon"], [8, 0, 0, "-", "predictive_text"], [8, 0, 0, "-", "primes"], [8, 0, 0, "-", "rabin_karp"], [8, 0, 0, "-", "range_minimum_query"], [8, 0, 0, "-", "rectangles_from_grid"], [8, 0, 0, "-", "rectangles_from_histogram"], [8, 0, 0, "-", "rectangles_from_points"], [8, 0, 0, "-", "roman_numbers"], [8, 0, 0, "-", "scalar"], [8, 0, 0, "-", "shortest_cycle"], [8, 0, 0, "-", "skip_list"], [8, 0, 0, "-", "strongly_connected_components"], [8, 0, 0, "-", "subsetsum"], [8, 0, 0, "-", "subsetsum_divide"], [8, 0, 0, "-", "sudoku"], [8, 0, 0, "-", "three_partition"], [8, 0, 0, "-", "topological_order"], [8, 0, 0, "-", "trie"], [8, 0, 0, "-", "two_sat"], [8, 0, 0, "-", "union_rectangles"], [8, 0, 0, "-", "windows_k_distinct"]], "tryalgo.anagrams": [[8, 1, 1, "", "anagrams"]], "tryalgo.arithm": [[8, 1, 1, "", "bezout"], [8, 1, 1, "", "binom"], [8, 1, 1, "", "binom_modulo"], [8, 1, 1, "", "inv"], [8, 1, 1, "", "pgcd"]], "tryalgo.arithm_expr_eval": [[8, 1, 1, "", "arithm_expr_eval"], [8, 1, 1, "", "arithm_expr_parse"]], "tryalgo.arithm_expr_target": [[8, 1, 1, "", "arithm_expr_target"]], "tryalgo.bellman_ford": [[8, 1, 1, "", "bellman_ford"], [8, 1, 1, "", "bellman_ford2"]], "tryalgo.bfs": [[8, 1, 1, "", "bfs"]], "tryalgo.biconnected_components": [[8, 1, 1, "", "cut_nodes_edges"], [8, 1, 1, "", "cut_nodes_edges2"]], "tryalgo.binary_search": [[8, 1, 1, "", "continuous_binary_search"], [8, 1, 1, "", "discrete_binary_search"], [8, 1, 1, "", "optimized_binary_search"], [8, 1, 1, "", "optimized_binary_search_lower"], [8, 1, 1, "", "ternary_search"]], "tryalgo.bipartite_matching": [[8, 1, 1, "", "max_bipartite_matching"], [8, 1, 1, "", "max_bipartite_matching2"]], "tryalgo.bipartite_vertex_cover": [[8, 1, 1, "", "bipartite_vertex_cover"]], "tryalgo.closest_points": [[8, 1, 1, "", "closest_points"]], "tryalgo.closest_values": [[8, 1, 1, "", "closest_values"]], "tryalgo.convex_hull": [[8, 1, 1, "", "andrew"]], "tryalgo.dancing_links": [[8, 1, 1, "", "dancing_links"]], "tryalgo.dfs": [[8, 1, 1, "", "dfs_grid"], [8, 1, 1, "", "dfs_grid_recursive"], [8, 1, 1, "", "dfs_iterative"], [8, 1, 1, "", "dfs_recursive"], [8, 1, 1, "", "dfs_tree"], [8, 1, 1, "", "find_cycle"]], "tryalgo.dijkstra": [[8, 1, 1, "", "dijkstra"], [8, 1, 1, "", "dijkstra_update_heap"]], "tryalgo.dilworth": [[8, 1, 1, "", "dilworth"]], "tryalgo.dinic": [[8, 1, 1, "", "dinic"]], "tryalgo.dist_grid": [[8, 1, 1, "", "dist_grid"]], "tryalgo.edmonds_karp": [[8, 1, 1, "", "edmonds_karp"]], "tryalgo.eulerian_tour": [[8, 1, 1, "", "eulerian_tour_directed"], [8, 1, 1, "", "eulerian_tour_undirected"], [8, 1, 1, "", "is_eulerian_tour"], [8, 1, 1, "", "random_eulerien_graph"], [8, 1, 1, "", "write_cycle"]], "tryalgo.fast_exponentiation": [[8, 1, 1, "", "fast_exponentiation"], [8, 1, 1, "", "fast_exponentiation2"]], "tryalgo.fenwick": [[8, 2, 1, "", "Fenwick"], [8, 2, 1, "", "FenwickMin"]], "tryalgo.fenwick.Fenwick": [[8, 3, 1, "", "add"], [8, 3, 1, "", "get"], [8, 3, 1, "", "intervalAdd"], [8, 3, 1, "", "intervalSum"], [8, 3, 1, "", "prefixSum"]], "tryalgo.fenwick.FenwickMin": [[8, 3, 1, "", "prefixMin"], [8, 3, 1, "", "update"]], "tryalgo.fft": [[8, 1, 1, "", "fft"], [8, 1, 1, "", "inv_fft"], [8, 1, 1, "", "mul_poly_fft"], [8, 1, 1, "", "pad"]], "tryalgo.floyd_warshall": [[8, 1, 1, "", "floyd_warshall"], [8, 1, 1, "", "floyd_warshall2"]], "tryalgo.ford_fulkerson": [[8, 1, 1, "", "ford_fulkerson"]], "tryalgo.freivalds": [[8, 1, 1, "", "freivalds"]], "tryalgo.gale_shapley": [[8, 1, 1, "", "gale_shapley"]], "tryalgo.gauss_jordan": [[8, 1, 1, "", "gauss_jordan"]], "tryalgo.graph": [[8, 2, 1, "", "Graph"], [8, 1, 1, "", "add_reverse_arcs"], [8, 1, 1, "", "dictdict_to_listdict"], [8, 1, 1, "", "extract_path"], [8, 1, 1, "", "listdict_to_listlist_and_matrix"], [8, 1, 1, "", "listlist_and_matrix_to_listdict"], [8, 1, 1, "", "make_flow_labels"], [8, 1, 1, "", "matrix_to_listlist"], [8, 1, 1, "", "read_graph"], [8, 1, 1, "", "readtab"], [8, 1, 1, "", "readval"], [8, 1, 1, "", "tree_adj_to_prec"], [8, 1, 1, "", "tree_prec_to_adj"], [8, 1, 1, "", "write_graph"]], "tryalgo.graph.Graph": [[8, 3, 1, "", "add_arc"], [8, 3, 1, "", "add_edge"], [8, 3, 1, "", "add_node"]], "tryalgo.graph01": [[8, 1, 1, "", "dist01"]], "tryalgo.horn_sat": [[8, 1, 1, "", "horn_sat"], [8, 1, 1, "", "read"]], "tryalgo.huffman": [[8, 1, 1, "", "extract"], [8, 1, 1, "", "huffman"]], "tryalgo.interval_cover": [[8, 1, 1, "", "interval_cover"]], "tryalgo.interval_tree": [[8, 1, 1, "", "interval_tree"], [8, 1, 1, "", "intervals_containing"]], "tryalgo.intervals_union": [[8, 1, 1, "", "intervals_union"]], "tryalgo.karatsuba": [[8, 1, 1, "", "add_poly"], [8, 1, 1, "", "eval_poly"], [8, 1, 1, "", "mul_poly"], [8, 1, 1, "", "sub_poly"]], "tryalgo.knapsack": [[8, 1, 1, "", "knapsack"], [8, 1, 1, "", "knapsack2"]], "tryalgo.knuth_morris_pratt": [[8, 1, 1, "", "knuth_morris_pratt"], [8, 1, 1, "", "maximum_border_length"], [8, 1, 1, "", "powerstring_by_border"], [8, 1, 1, "", "powerstring_by_find"]], "tryalgo.kruskal": [[8, 2, 1, "", "UnionFind"], [8, 1, 1, "", "dist"], [8, 1, 1, "", "kruskal"]], "tryalgo.kruskal.UnionFind": [[8, 3, 1, "", "find"], [8, 3, 1, "", "union"]], "tryalgo.kuhn_munkres": [[8, 1, 1, "", "kuhn_munkres"]], "tryalgo.kuhn_munkres_n4": [[8, 1, 1, "", "kuhn_munkres"]], "tryalgo.laser_mirrors": [[8, 1, 1, "", "laser_mirrors"], [8, 1, 1, "", "solve"]], "tryalgo.left_right_inversions": [[8, 1, 1, "", "left_right_inversions"]], "tryalgo.levenshtein": [[8, 1, 1, "", "levenshtein"]], "tryalgo.longest_common_subsequence": [[8, 1, 1, "", "longest_common_subsequence"]], "tryalgo.longest_increasing_subsequence": [[8, 1, 1, "", "longest_increasing_subsequence"]], "tryalgo.lowest_common_ancestor": [[8, 2, 1, "", "LowestCommonAncestorRMQ"], [8, 2, 1, "", "LowestCommonAncestorShortcuts"], [8, 1, 1, "", "log2ceil"], [8, 1, 1, "", "log2floor"]], "tryalgo.lowest_common_ancestor.LowestCommonAncestorRMQ": [[8, 3, 1, "", "query"]], "tryalgo.lowest_common_ancestor.LowestCommonAncestorShortcuts": [[8, 3, 1, "", "query"]], "tryalgo.majority": [[8, 1, 1, "", "majority"]], "tryalgo.manacher": [[8, 1, 1, "", "manacher"]], "tryalgo.matrix_chain_mult": [[8, 1, 1, "", "matrix_chain_mult"], [8, 1, 1, "", "matrix_mult_opt_order"]], "tryalgo.max_interval_intersec": [[8, 1, 1, "", "max_interval_intersec"]], "tryalgo.merge_ordered_lists": [[8, 1, 1, "", "merge"]], "tryalgo.min_mean_cycle": [[8, 1, 1, "", "min_mean_cycle"]], "tryalgo.next_permutation": [[8, 1, 1, "", "convert"], [8, 1, 1, "", "next_permutation"], [8, 1, 1, "", "solve_word_addition"]], "tryalgo.our_heap": [[8, 2, 1, "", "OurHeap"]], "tryalgo.our_heap.OurHeap": [[8, 3, 1, "", "down"], [8, 3, 1, "", "pop"], [8, 3, 1, "", "push"], [8, 3, 1, "", "up"], [8, 3, 1, "", "update"]], "tryalgo.our_queue": [[8, 2, 1, "", "OurQueue"]], "tryalgo.our_queue.OurQueue": [[8, 3, 1, "", "pop"], [8, 3, 1, "", "push"]], "tryalgo.our_std": [[8, 1, 1, "", "readarray"], [8, 1, 1, "", "readint"], [8, 1, 1, "", "readmatrix"], [8, 1, 1, "", "readstr"]], "tryalgo.pareto": [[8, 1, 1, "", "pareto2d"], [8, 1, 1, "", "pareto3d"]], "tryalgo.partition_refinement": [[8, 2, 1, "", "PartitionRefinement"]], "tryalgo.partition_refinement.PartitionRefinement": [[8, 3, 1, "", "order"], [8, 3, 1, "", "refine"], [8, 3, 1, "", "tolist"]], "tryalgo.permutation_rank": [[8, 1, 1, "", "permutation_rank"], [8, 1, 1, "", "rank_permutation"]], "tryalgo.polygon": [[8, 1, 1, "", "area"], [8, 1, 1, "", "is_simple"]], "tryalgo.predictive_text": [[8, 1, 1, "", "predictive_text"], [8, 1, 1, "", "propose"]], "tryalgo.primes": [[8, 1, 1, "", "eratosthene"], [8, 1, 1, "", "gries_misra"]], "tryalgo.rabin_karp": [[8, 1, 1, "", "matches"], [8, 1, 1, "", "rabin_karp_factor"], [8, 1, 1, "", "rabin_karp_matching"], [8, 1, 1, "", "roll_hash"]], "tryalgo.range_minimum_query": [[8, 2, 1, "", "LazySegmentTree"], [8, 2, 1, "", "RangeMinQuery"]], "tryalgo.range_minimum_query.LazySegmentTree": [[8, 3, 1, "", "add"], [8, 3, 1, "", "max"], [8, 3, 1, "", "min"], [8, 3, 1, "", "set"], [8, 3, 1, "", "sum"]], "tryalgo.range_minimum_query.RangeMinQuery": [[8, 3, 1, "", "range_min"]], "tryalgo.rectangles_from_grid": [[8, 1, 1, "", "rectangles_from_grid"]], "tryalgo.rectangles_from_histogram": [[8, 1, 1, "", "rectangles_from_histogram"]], "tryalgo.rectangles_from_points": [[8, 1, 1, "", "rectangles_from_points"]], "tryalgo.roman_numbers": [[8, 1, 1, "", "int2roman"], [8, 1, 1, "", "roman2int"]], "tryalgo.scalar": [[8, 1, 1, "", "min_scalar_prod"]], "tryalgo.shortest_cycle": [[8, 1, 1, "", "powergraph"], [8, 1, 1, "", "shortest_cycle"]], "tryalgo.skip_list": [[8, 2, 1, "", "AbstractSkipList"], [8, 2, 1, "", "SortedDict"], [8, 2, 1, "", "SortedSet"], [8, 1, 1, "", "random"]], "tryalgo.skip_list.AbstractSkipList": [[8, 3, 1, "", "find"], [8, 3, 1, "", "getkth"], [8, 3, 1, "", "insert"], [8, 3, 1, "", "lastKey"], [8, 3, 1, "", "nextKey"], [8, 3, 1, "", "nextNode"], [8, 3, 1, "", "randomHeight"], [8, 3, 1, "", "remove"]], "tryalgo.skip_list.SortedDict": [[8, 2, 1, "", "Node"], [8, 3, 1, "", "keys"]], "tryalgo.skip_list.SortedDict.Node": [[8, 4, 1, "", "count"], [8, 4, 1, "", "key"], [8, 4, 1, "", "next"], [8, 4, 1, "", "val"]], "tryalgo.skip_list.SortedSet": [[8, 2, 1, "", "Node"], [8, 3, 1, "", "add"], [8, 3, 1, "", "pop"]], "tryalgo.skip_list.SortedSet.Node": [[8, 4, 1, "", "count"], [8, 4, 1, "", "key"], [8, 4, 1, "", "next"]], "tryalgo.strongly_connected_components": [[8, 1, 1, "", "kosaraju"], [8, 1, 1, "", "reverse"], [8, 1, 1, "", "tarjan"], [8, 1, 1, "", "tarjan_recursif"]], "tryalgo.subsetsum": [[8, 1, 1, "", "coin_change"], [8, 1, 1, "", "subset_sum"]], "tryalgo.subsetsum_divide": [[8, 1, 1, "", "part_sum"], [8, 1, 1, "", "part_sum2"], [8, 1, 1, "", "subset_sum"], [8, 1, 1, "", "subset_sum2"]], "tryalgo.sudoku": [[8, 1, 1, "", "sudoku"]], "tryalgo.three_partition": [[8, 1, 1, "", "three_partition"]], "tryalgo.topological_order": [[8, 1, 1, "", "topological_order"], [8, 1, 1, "", "topological_order_dfs"]], "tryalgo.trie": [[8, 1, 1, "", "Trie"], [8, 2, 1, "", "TrieNode"], [8, 1, 1, "", "add"], [8, 1, 1, "", "search"], [8, 1, 1, "", "spell_check"]], "tryalgo.two_sat": [[8, 1, 1, "", "two_sat"]], "tryalgo.union_rectangles": [[8, 2, 1, "", "CoverQuery"], [8, 1, 1, "", "rectangles_contains_point"], [8, 1, 1, "", "union_intervals"], [8, 1, 1, "", "union_rectangles"], [8, 1, 1, "", "union_rectangles_fast"], [8, 1, 1, "", "union_rectangles_fastest"], [8, 1, 1, "", "union_rectangles_naive"]], "tryalgo.union_rectangles.CoverQuery": [[8, 3, 1, "", "change"], [8, 3, 1, "", "cover"]], "tryalgo.windows_k_distinct": [[8, 1, 1, "", "windows_k_distinct"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"countdown": 0, "coin": [1, 6], "chang": [1, 6], "galleri": 2, "exampl": 2, "content": [3, 8], "librari": 3, "basic": 3, "algorithm": 3, "data": 3, "structur": 3, "string": [3, 6], "sequenc": 3, "arrai": 3, "interv": 3, "graph": [3, 8], "cycl": 3, "shortest": 3, "path": 3, "match": 3, "flow": 3, "relat": 3, "tree": 3, "set": 3, "geometri": 3, "arithmet": 3, "backtrack": 3, "last": 3, "word": 3, "welcom": 4, "tryalgo": [4, 7, 8], "": 4, "document": 4, "instal": 5, "With": 5, "pip": 5, "from": 5, "pypi": 5, "quick": 6, "start": 6, "longest": 6, "palindrom": 6, "substr": 6, "pathfind": 6, "packag": 8, "submodul": 8, "anagram": 8, "modul": 8, "arithm": 8, "arithm_expr_ev": 8, "arithm_expr_target": 8, "bellman_ford": 8, "bf": 8, "biconnected_compon": 8, "binary_search": 8, "bipartite_match": 8, "bipartite_vertex_cov": 8, "closest_point": 8, "closest_valu": 8, "convex_hul": 8, "dancing_link": 8, "df": 8, "dijkstra": 8, "dilworth": 8, "dinic": 8, "dist_grid": 8, "edmonds_karp": 8, "eulerian_tour": 8, "fast_exponenti": 8, "fenwick": 8, "fft": 8, "floyd_warshal": 8, "ford_fulkerson": 8, "freivald": 8, "gale_shaplei": 8, "gauss_jordan": 8, "graph01": 8, "horn_sat": 8, "huffman": 8, "interval_cov": 8, "interval_tre": 8, "intervals_union": 8, "karatsuba": 8, "knapsack": 8, "knuth_morris_pratt": 8, "kruskal": 8, "kuhn_munkr": 8, "kuhn_munkres_n4": 8, "laser_mirror": 8, "left_right_invers": 8, "levenshtein": 8, "longest_common_subsequ": 8, "longest_increasing_subsequ": 8, "lowest_common_ancestor": 8, "major": 8, "manach": 8, "matrix_chain_mult": 8, "max_interval_intersec": 8, "merge_ordered_list": 8, "min_mean_cycl": 8, "next_permut": 8, "our_heap": 8, "our_queu": 8, "our_std": 8, "pareto": 8, "partition_refin": 8, "permutation_rank": 8, "polygon": 8, "predictive_text": 8, "prime": 8, "rabin_karp": 8, "range_minimum_queri": 8, "rectangles_from_grid": 8, "rectangles_from_histogram": 8, "rectangles_from_point": 8, "roman_numb": 8, "scalar": 8, "shortest_cycl": 8, "skip_list": 8, "strongly_connected_compon": 8, "subsetsum": 8, "subsetsum_divid": 8, "sudoku": 8, "three_partit": 8, "topological_ord": 8, "trie": 8, "two_sat": 8, "union_rectangl": 8, "windows_k_distinct": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Countdown": [[0, "countdown"]], "Coin change": [[1, "coin-change"], [6, "coin-change"]], "Gallery of examples": [[2, "gallery-of-examples"]], "Content of the library": [[3, "content-of-the-library"]], "Basic algorithms and data structures": [[3, "basic-algorithms-and-data-structures"]], "Strings": [[3, "strings"]], "Sequences and Arrays": [[3, "sequences-and-arrays"]], "Intervals": [[3, "intervals"]], "Graphs": [[3, "graphs"]], "Cycles": [[3, "cycles"]], "Shortest paths": [[3, "shortest-paths"]], "Matching, flows and related": [[3, "matching-flows-and-related"]], "Trees": [[3, "trees"]], "Sets": [[3, "sets"]], "Geometry": [[3, "geometry"]], "Arithmetic": [[3, "arithmetic"]], "Backtracking": [[3, "backtracking"]], "Last words": [[3, "last-words"]], "Welcome to tryalgo\u2019s documentation!": [[4, "welcome-to-tryalgo-s-documentation"]], "Installation": [[5, "installation"]], "With PIP": [[5, "with-pip"]], "From PyPI": [[5, "from-pypi"]], "Quick start": [[6, "quick-start"]], "Longest palindrome substring of a string": [[6, "longest-palindrome-substring-of-a-string"]], "Pathfinding": [[6, "pathfinding"]], "tryalgo": [[7, "tryalgo"]], "tryalgo package": [[8, "tryalgo-package"]], "Submodules": [[8, "submodules"]], "tryalgo.anagrams module": [[8, "module-tryalgo.anagrams"]], "tryalgo.arithm module": [[8, "module-tryalgo.arithm"]], "tryalgo.arithm_expr_eval module": [[8, "module-tryalgo.arithm_expr_eval"]], "tryalgo.arithm_expr_target module": [[8, "module-tryalgo.arithm_expr_target"]], "tryalgo.bellman_ford module": [[8, "module-tryalgo.bellman_ford"]], "tryalgo.bfs module": [[8, "module-tryalgo.bfs"]], "tryalgo.biconnected_components module": [[8, "module-tryalgo.biconnected_components"]], "tryalgo.binary_search module": [[8, "module-tryalgo.binary_search"]], "tryalgo.bipartite_matching module": [[8, "module-tryalgo.bipartite_matching"]], "tryalgo.bipartite_vertex_cover module": [[8, "module-tryalgo.bipartite_vertex_cover"]], "tryalgo.closest_points module": [[8, "module-tryalgo.closest_points"]], "tryalgo.closest_values module": [[8, "module-tryalgo.closest_values"]], "tryalgo.convex_hull module": [[8, "module-tryalgo.convex_hull"]], "tryalgo.dancing_links module": [[8, "module-tryalgo.dancing_links"]], "tryalgo.dfs module": [[8, "module-tryalgo.dfs"]], "tryalgo.dijkstra module": [[8, "module-tryalgo.dijkstra"]], "tryalgo.dilworth module": [[8, "module-tryalgo.dilworth"]], "tryalgo.dinic module": [[8, "module-tryalgo.dinic"]], "tryalgo.dist_grid module": [[8, "module-tryalgo.dist_grid"]], "tryalgo.edmonds_karp module": [[8, "module-tryalgo.edmonds_karp"]], "tryalgo.eulerian_tour module": [[8, "module-tryalgo.eulerian_tour"]], "tryalgo.fast_exponentiation module": [[8, "module-tryalgo.fast_exponentiation"]], "tryalgo.fenwick module": [[8, "module-tryalgo.fenwick"]], "tryalgo.fft module": [[8, "module-tryalgo.fft"]], "tryalgo.floyd_warshall module": [[8, "module-tryalgo.floyd_warshall"]], "tryalgo.ford_fulkerson module": [[8, "module-tryalgo.ford_fulkerson"]], "tryalgo.freivalds module": [[8, "module-tryalgo.freivalds"]], "tryalgo.gale_shapley module": [[8, "module-tryalgo.gale_shapley"]], "tryalgo.gauss_jordan module": [[8, "module-tryalgo.gauss_jordan"]], "tryalgo.graph module": [[8, "module-tryalgo.graph"]], "tryalgo.graph01 module": [[8, "module-tryalgo.graph01"]], "tryalgo.horn_sat module": [[8, "module-tryalgo.horn_sat"]], "tryalgo.huffman module": [[8, "module-tryalgo.huffman"]], "tryalgo.interval_cover module": [[8, "module-tryalgo.interval_cover"]], "tryalgo.interval_tree module": [[8, "module-tryalgo.interval_tree"]], "tryalgo.intervals_union module": [[8, "module-tryalgo.intervals_union"]], "tryalgo.karatsuba module": [[8, "module-tryalgo.karatsuba"]], "tryalgo.knapsack module": [[8, "module-tryalgo.knapsack"]], "tryalgo.knuth_morris_pratt module": [[8, "module-tryalgo.knuth_morris_pratt"]], "tryalgo.kruskal module": [[8, "module-tryalgo.kruskal"]], "tryalgo.kuhn_munkres module": [[8, "module-tryalgo.kuhn_munkres"]], "tryalgo.kuhn_munkres_n4 module": [[8, "module-tryalgo.kuhn_munkres_n4"]], "tryalgo.laser_mirrors module": [[8, "module-tryalgo.laser_mirrors"]], "tryalgo.left_right_inversions module": [[8, "module-tryalgo.left_right_inversions"]], "tryalgo.levenshtein module": [[8, "module-tryalgo.levenshtein"]], "tryalgo.longest_common_subsequence module": [[8, "module-tryalgo.longest_common_subsequence"]], "tryalgo.longest_increasing_subsequence module": [[8, "module-tryalgo.longest_increasing_subsequence"]], "tryalgo.lowest_common_ancestor module": [[8, "module-tryalgo.lowest_common_ancestor"]], "tryalgo.majority module": [[8, "module-tryalgo.majority"]], "tryalgo.manacher module": [[8, "module-tryalgo.manacher"]], "tryalgo.matrix_chain_mult module": [[8, "module-tryalgo.matrix_chain_mult"]], "tryalgo.max_interval_intersec module": [[8, "module-tryalgo.max_interval_intersec"]], "tryalgo.merge_ordered_lists module": [[8, "module-tryalgo.merge_ordered_lists"]], "tryalgo.min_mean_cycle module": [[8, "module-tryalgo.min_mean_cycle"]], "tryalgo.next_permutation module": [[8, "module-tryalgo.next_permutation"]], "tryalgo.our_heap module": [[8, "module-tryalgo.our_heap"]], "tryalgo.our_queue module": [[8, "module-tryalgo.our_queue"]], "tryalgo.our_std module": [[8, "module-tryalgo.our_std"]], "tryalgo.pareto module": [[8, "module-tryalgo.pareto"]], "tryalgo.partition_refinement module": [[8, "module-tryalgo.partition_refinement"]], "tryalgo.permutation_rank module": [[8, "module-tryalgo.permutation_rank"]], "tryalgo.polygon module": [[8, "module-tryalgo.polygon"]], "tryalgo.predictive_text module": [[8, "module-tryalgo.predictive_text"]], "tryalgo.primes module": [[8, "module-tryalgo.primes"]], "tryalgo.rabin_karp module": [[8, "module-tryalgo.rabin_karp"]], "tryalgo.range_minimum_query module": [[8, "module-tryalgo.range_minimum_query"]], "tryalgo.rectangles_from_grid module": [[8, "module-tryalgo.rectangles_from_grid"]], "tryalgo.rectangles_from_histogram module": [[8, "module-tryalgo.rectangles_from_histogram"]], "tryalgo.rectangles_from_points module": [[8, "module-tryalgo.rectangles_from_points"]], "tryalgo.roman_numbers module": [[8, "module-tryalgo.roman_numbers"]], "tryalgo.scalar module": [[8, "module-tryalgo.scalar"]], "tryalgo.shortest_cycle module": [[8, "module-tryalgo.shortest_cycle"]], "tryalgo.skip_list module": [[8, "module-tryalgo.skip_list"]], "tryalgo.strongly_connected_components module": [[8, "module-tryalgo.strongly_connected_components"]], "tryalgo.subsetsum module": [[8, "module-tryalgo.subsetsum"]], "tryalgo.subsetsum_divide module": [[8, "module-tryalgo.subsetsum_divide"]], "tryalgo.sudoku module": [[8, "module-tryalgo.sudoku"]], "tryalgo.three_partition module": [[8, "module-tryalgo.three_partition"]], "tryalgo.topological_order module": [[8, "module-tryalgo.topological_order"]], "tryalgo.trie module": [[8, "module-tryalgo.trie"]], "tryalgo.two_sat module": [[8, "module-tryalgo.two_sat"]], "tryalgo.union_rectangles module": [[8, "module-tryalgo.union_rectangles"]], "tryalgo.windows_k_distinct module": [[8, "module-tryalgo.windows_k_distinct"]], "Module contents": [[8, "module-tryalgo"]]}, "indexentries": {"abstractskiplist (class in tryalgo.skip_list)": [[8, "tryalgo.skip_list.AbstractSkipList"]], "coverquery (class in tryalgo.union_rectangles)": [[8, "tryalgo.union_rectangles.CoverQuery"]], "fenwick (class in tryalgo.fenwick)": [[8, "tryalgo.fenwick.Fenwick"]], "fenwickmin (class in tryalgo.fenwick)": [[8, "tryalgo.fenwick.FenwickMin"]], "graph (class in tryalgo.graph)": [[8, "tryalgo.graph.Graph"]], "lazysegmenttree (class in tryalgo.range_minimum_query)": [[8, "tryalgo.range_minimum_query.LazySegmentTree"]], "lowestcommonancestorrmq (class in tryalgo.lowest_common_ancestor)": [[8, "tryalgo.lowest_common_ancestor.LowestCommonAncestorRMQ"]], "lowestcommonancestorshortcuts (class in tryalgo.lowest_common_ancestor)": [[8, "tryalgo.lowest_common_ancestor.LowestCommonAncestorShortcuts"]], "ourheap (class in tryalgo.our_heap)": [[8, "tryalgo.our_heap.OurHeap"]], "ourqueue (class in tryalgo.our_queue)": [[8, "tryalgo.our_queue.OurQueue"]], "partitionrefinement (class in tryalgo.partition_refinement)": [[8, "tryalgo.partition_refinement.PartitionRefinement"]], "rangeminquery (class in tryalgo.range_minimum_query)": [[8, "tryalgo.range_minimum_query.RangeMinQuery"]], "sorteddict (class in tryalgo.skip_list)": [[8, "tryalgo.skip_list.SortedDict"]], "sorteddict.node (class in tryalgo.skip_list)": [[8, "tryalgo.skip_list.SortedDict.Node"]], "sortedset (class in tryalgo.skip_list)": [[8, "tryalgo.skip_list.SortedSet"]], "sortedset.node (class in tryalgo.skip_list)": [[8, "tryalgo.skip_list.SortedSet.Node"]], "trie() (in module tryalgo.trie)": [[8, "tryalgo.trie.Trie"]], "trienode (class in tryalgo.trie)": [[8, "tryalgo.trie.TrieNode"]], "unionfind (class in tryalgo.kruskal)": [[8, "tryalgo.kruskal.UnionFind"]], "add() (in module tryalgo.trie)": [[8, "tryalgo.trie.add"]], "add() (tryalgo.fenwick.fenwick method)": [[8, "tryalgo.fenwick.Fenwick.add"]], "add() (tryalgo.range_minimum_query.lazysegmenttree method)": [[8, "tryalgo.range_minimum_query.LazySegmentTree.add"]], "add() (tryalgo.skip_list.sortedset method)": [[8, "tryalgo.skip_list.SortedSet.add"]], "add_arc() (tryalgo.graph.graph method)": [[8, "tryalgo.graph.Graph.add_arc"]], "add_edge() (tryalgo.graph.graph method)": [[8, "tryalgo.graph.Graph.add_edge"]], "add_node() (tryalgo.graph.graph method)": [[8, "tryalgo.graph.Graph.add_node"]], "add_poly() (in module tryalgo.karatsuba)": [[8, "tryalgo.karatsuba.add_poly"]], "add_reverse_arcs() (in module tryalgo.graph)": [[8, "tryalgo.graph.add_reverse_arcs"]], "anagrams() (in module tryalgo.anagrams)": [[8, "tryalgo.anagrams.anagrams"]], "andrew() (in module tryalgo.convex_hull)": [[8, "tryalgo.convex_hull.andrew"]], "area() (in module tryalgo.polygon)": [[8, "tryalgo.polygon.area"]], "arithm_expr_eval() (in module tryalgo.arithm_expr_eval)": [[8, "tryalgo.arithm_expr_eval.arithm_expr_eval"]], "arithm_expr_parse() (in module tryalgo.arithm_expr_eval)": [[8, "tryalgo.arithm_expr_eval.arithm_expr_parse"]], "arithm_expr_target() (in module tryalgo.arithm_expr_target)": [[8, "tryalgo.arithm_expr_target.arithm_expr_target"]], "bellman_ford() (in module tryalgo.bellman_ford)": [[8, "tryalgo.bellman_ford.bellman_ford"]], "bellman_ford2() (in module tryalgo.bellman_ford)": [[8, "tryalgo.bellman_ford.bellman_ford2"]], "bezout() (in module tryalgo.arithm)": [[8, "tryalgo.arithm.bezout"]], "bfs() (in module tryalgo.bfs)": [[8, "tryalgo.bfs.bfs"]], "binom() (in module tryalgo.arithm)": [[8, "tryalgo.arithm.binom"]], "binom_modulo() (in module tryalgo.arithm)": [[8, "tryalgo.arithm.binom_modulo"]], "bipartite_vertex_cover() (in module tryalgo.bipartite_vertex_cover)": [[8, "tryalgo.bipartite_vertex_cover.bipartite_vertex_cover"]], "change() (tryalgo.union_rectangles.coverquery method)": [[8, "tryalgo.union_rectangles.CoverQuery.change"]], "closest_points() (in module tryalgo.closest_points)": [[8, "tryalgo.closest_points.closest_points"]], "closest_values() (in module tryalgo.closest_values)": [[8, "tryalgo.closest_values.closest_values"]], "coin_change() (in module tryalgo.subsetsum)": [[8, "tryalgo.subsetsum.coin_change"]], "continuous_binary_search() (in module tryalgo.binary_search)": [[8, "tryalgo.binary_search.continuous_binary_search"]], "convert() (in module tryalgo.next_permutation)": [[8, "tryalgo.next_permutation.convert"]], "count (tryalgo.skip_list.sorteddict.node attribute)": [[8, "tryalgo.skip_list.SortedDict.Node.count"]], "count (tryalgo.skip_list.sortedset.node attribute)": [[8, "tryalgo.skip_list.SortedSet.Node.count"]], "cover() (tryalgo.union_rectangles.coverquery method)": [[8, "tryalgo.union_rectangles.CoverQuery.cover"]], "cut_nodes_edges() (in module tryalgo.biconnected_components)": [[8, "tryalgo.biconnected_components.cut_nodes_edges"]], "cut_nodes_edges2() (in module tryalgo.biconnected_components)": [[8, "tryalgo.biconnected_components.cut_nodes_edges2"]], "dancing_links() (in module tryalgo.dancing_links)": [[8, "tryalgo.dancing_links.dancing_links"]], "dfs_grid() (in module tryalgo.dfs)": [[8, "tryalgo.dfs.dfs_grid"]], "dfs_grid_recursive() (in module tryalgo.dfs)": [[8, "tryalgo.dfs.dfs_grid_recursive"]], "dfs_iterative() (in module tryalgo.dfs)": [[8, "tryalgo.dfs.dfs_iterative"]], "dfs_recursive() (in module tryalgo.dfs)": [[8, "tryalgo.dfs.dfs_recursive"]], "dfs_tree() (in module tryalgo.dfs)": [[8, "tryalgo.dfs.dfs_tree"]], "dictdict_to_listdict() (in module tryalgo.graph)": [[8, "tryalgo.graph.dictdict_to_listdict"]], "dijkstra() (in module tryalgo.dijkstra)": [[8, "tryalgo.dijkstra.dijkstra"]], "dijkstra_update_heap() (in module tryalgo.dijkstra)": [[8, "tryalgo.dijkstra.dijkstra_update_heap"]], "dilworth() (in module tryalgo.dilworth)": [[8, "tryalgo.dilworth.dilworth"]], "dinic() (in module tryalgo.dinic)": [[8, "tryalgo.dinic.dinic"]], "discrete_binary_search() (in module tryalgo.binary_search)": [[8, "tryalgo.binary_search.discrete_binary_search"]], "dist() (in module tryalgo.kruskal)": [[8, "tryalgo.kruskal.dist"]], "dist01() (in module tryalgo.graph01)": [[8, "tryalgo.graph01.dist01"]], "dist_grid() (in module tryalgo.dist_grid)": [[8, "tryalgo.dist_grid.dist_grid"]], "down() (tryalgo.our_heap.ourheap method)": [[8, "tryalgo.our_heap.OurHeap.down"]], "edmonds_karp() (in module tryalgo.edmonds_karp)": [[8, "tryalgo.edmonds_karp.edmonds_karp"]], "eratosthene() (in module tryalgo.primes)": [[8, "tryalgo.primes.eratosthene"]], "eulerian_tour_directed() (in module tryalgo.eulerian_tour)": [[8, "tryalgo.eulerian_tour.eulerian_tour_directed"]], "eulerian_tour_undirected() (in module tryalgo.eulerian_tour)": [[8, "tryalgo.eulerian_tour.eulerian_tour_undirected"]], "eval_poly() (in module tryalgo.karatsuba)": [[8, "tryalgo.karatsuba.eval_poly"]], "extract() (in module tryalgo.huffman)": [[8, "tryalgo.huffman.extract"]], "extract_path() (in module tryalgo.graph)": [[8, "tryalgo.graph.extract_path"]], "fast_exponentiation() (in module tryalgo.fast_exponentiation)": [[8, "tryalgo.fast_exponentiation.fast_exponentiation"]], "fast_exponentiation2() (in module tryalgo.fast_exponentiation)": [[8, "tryalgo.fast_exponentiation.fast_exponentiation2"]], "fft() (in module tryalgo.fft)": [[8, "tryalgo.fft.fft"]], "find() (tryalgo.kruskal.unionfind method)": [[8, "tryalgo.kruskal.UnionFind.find"]], "find() (tryalgo.skip_list.abstractskiplist method)": [[8, "tryalgo.skip_list.AbstractSkipList.find"]], "find_cycle() (in module tryalgo.dfs)": [[8, "tryalgo.dfs.find_cycle"]], "floyd_warshall() (in module tryalgo.floyd_warshall)": [[8, "tryalgo.floyd_warshall.floyd_warshall"]], "floyd_warshall2() (in module tryalgo.floyd_warshall)": [[8, "tryalgo.floyd_warshall.floyd_warshall2"]], "ford_fulkerson() (in module tryalgo.ford_fulkerson)": [[8, "tryalgo.ford_fulkerson.ford_fulkerson"]], "freivalds() (in module tryalgo.freivalds)": [[8, "tryalgo.freivalds.freivalds"]], "gale_shapley() (in module tryalgo.gale_shapley)": [[8, "tryalgo.gale_shapley.gale_shapley"]], "gauss_jordan() (in module tryalgo.gauss_jordan)": [[8, "tryalgo.gauss_jordan.gauss_jordan"]], "get() (tryalgo.fenwick.fenwick method)": [[8, "tryalgo.fenwick.Fenwick.get"]], "getkth() (tryalgo.skip_list.abstractskiplist method)": [[8, "tryalgo.skip_list.AbstractSkipList.getkth"]], "gries_misra() (in module tryalgo.primes)": [[8, "tryalgo.primes.gries_misra"]], "horn_sat() (in module tryalgo.horn_sat)": [[8, "tryalgo.horn_sat.horn_sat"]], "huffman() (in module tryalgo.huffman)": [[8, "tryalgo.huffman.huffman"]], "insert() (tryalgo.skip_list.abstractskiplist method)": [[8, "tryalgo.skip_list.AbstractSkipList.insert"]], "int2roman() (in module tryalgo.roman_numbers)": [[8, "tryalgo.roman_numbers.int2roman"]], "intervaladd() (tryalgo.fenwick.fenwick method)": [[8, "tryalgo.fenwick.Fenwick.intervalAdd"]], "intervalsum() (tryalgo.fenwick.fenwick method)": [[8, "tryalgo.fenwick.Fenwick.intervalSum"]], "interval_cover() (in module tryalgo.interval_cover)": [[8, "tryalgo.interval_cover.interval_cover"]], "interval_tree() (in module tryalgo.interval_tree)": [[8, "tryalgo.interval_tree.interval_tree"]], "intervals_containing() (in module tryalgo.interval_tree)": [[8, "tryalgo.interval_tree.intervals_containing"]], "intervals_union() (in module tryalgo.intervals_union)": [[8, "tryalgo.intervals_union.intervals_union"]], "inv() (in module tryalgo.arithm)": [[8, "tryalgo.arithm.inv"]], "inv_fft() (in module tryalgo.fft)": [[8, "tryalgo.fft.inv_fft"]], "is_eulerian_tour() (in module tryalgo.eulerian_tour)": [[8, "tryalgo.eulerian_tour.is_eulerian_tour"]], "is_simple() (in module tryalgo.polygon)": [[8, "tryalgo.polygon.is_simple"]], "key (tryalgo.skip_list.sorteddict.node attribute)": [[8, "tryalgo.skip_list.SortedDict.Node.key"]], "key (tryalgo.skip_list.sortedset.node attribute)": [[8, "tryalgo.skip_list.SortedSet.Node.key"]], "keys() (tryalgo.skip_list.sorteddict method)": [[8, "tryalgo.skip_list.SortedDict.keys"]], "knapsack() (in module tryalgo.knapsack)": [[8, "tryalgo.knapsack.knapsack"]], "knapsack2() (in module tryalgo.knapsack)": [[8, "tryalgo.knapsack.knapsack2"]], "knuth_morris_pratt() (in module tryalgo.knuth_morris_pratt)": [[8, "tryalgo.knuth_morris_pratt.knuth_morris_pratt"]], "kosaraju() (in module tryalgo.strongly_connected_components)": [[8, "tryalgo.strongly_connected_components.kosaraju"]], "kruskal() (in module tryalgo.kruskal)": [[8, "tryalgo.kruskal.kruskal"]], "kuhn_munkres() (in module tryalgo.kuhn_munkres)": [[8, "tryalgo.kuhn_munkres.kuhn_munkres"]], "kuhn_munkres() (in module tryalgo.kuhn_munkres_n4)": [[8, "tryalgo.kuhn_munkres_n4.kuhn_munkres"]], "laser_mirrors() (in module tryalgo.laser_mirrors)": [[8, "tryalgo.laser_mirrors.laser_mirrors"]], "lastkey() (tryalgo.skip_list.abstractskiplist method)": [[8, "tryalgo.skip_list.AbstractSkipList.lastKey"]], "left_right_inversions() (in module tryalgo.left_right_inversions)": [[8, "tryalgo.left_right_inversions.left_right_inversions"]], "levenshtein() (in module tryalgo.levenshtein)": [[8, "tryalgo.levenshtein.levenshtein"]], "listdict_to_listlist_and_matrix() (in module tryalgo.graph)": [[8, "tryalgo.graph.listdict_to_listlist_and_matrix"]], "listlist_and_matrix_to_listdict() (in module tryalgo.graph)": [[8, "tryalgo.graph.listlist_and_matrix_to_listdict"]], "log2ceil() (in module tryalgo.lowest_common_ancestor)": [[8, "tryalgo.lowest_common_ancestor.log2ceil"]], "log2floor() (in module tryalgo.lowest_common_ancestor)": [[8, "tryalgo.lowest_common_ancestor.log2floor"]], "longest_common_subsequence() (in module tryalgo.longest_common_subsequence)": [[8, "tryalgo.longest_common_subsequence.longest_common_subsequence"]], "longest_increasing_subsequence() (in module tryalgo.longest_increasing_subsequence)": [[8, "tryalgo.longest_increasing_subsequence.longest_increasing_subsequence"]], "majority() (in module tryalgo.majority)": [[8, "tryalgo.majority.majority"]], "make_flow_labels() (in module tryalgo.graph)": [[8, "tryalgo.graph.make_flow_labels"]], "manacher() (in module tryalgo.manacher)": [[8, "tryalgo.manacher.manacher"]], "matches() (in module tryalgo.rabin_karp)": [[8, "tryalgo.rabin_karp.matches"]], "matrix_chain_mult() (in module tryalgo.matrix_chain_mult)": [[8, "tryalgo.matrix_chain_mult.matrix_chain_mult"]], "matrix_mult_opt_order() (in module tryalgo.matrix_chain_mult)": [[8, "tryalgo.matrix_chain_mult.matrix_mult_opt_order"]], "matrix_to_listlist() (in module tryalgo.graph)": [[8, "tryalgo.graph.matrix_to_listlist"]], "max() (tryalgo.range_minimum_query.lazysegmenttree method)": [[8, "tryalgo.range_minimum_query.LazySegmentTree.max"]], "max_bipartite_matching() (in module tryalgo.bipartite_matching)": [[8, "tryalgo.bipartite_matching.max_bipartite_matching"]], "max_bipartite_matching2() (in module tryalgo.bipartite_matching)": [[8, "tryalgo.bipartite_matching.max_bipartite_matching2"]], "max_interval_intersec() (in module tryalgo.max_interval_intersec)": [[8, "tryalgo.max_interval_intersec.max_interval_intersec"]], "maximum_border_length() (in module tryalgo.knuth_morris_pratt)": [[8, "tryalgo.knuth_morris_pratt.maximum_border_length"]], "merge() (in module tryalgo.merge_ordered_lists)": [[8, "tryalgo.merge_ordered_lists.merge"]], "min() (tryalgo.range_minimum_query.lazysegmenttree method)": [[8, "tryalgo.range_minimum_query.LazySegmentTree.min"]], "min_mean_cycle() (in module tryalgo.min_mean_cycle)": [[8, "tryalgo.min_mean_cycle.min_mean_cycle"]], "min_scalar_prod() (in module tryalgo.scalar)": [[8, "tryalgo.scalar.min_scalar_prod"]], "module": [[8, "module-tryalgo"], [8, "module-tryalgo.anagrams"], [8, "module-tryalgo.arithm"], [8, "module-tryalgo.arithm_expr_eval"], [8, "module-tryalgo.arithm_expr_target"], [8, "module-tryalgo.bellman_ford"], [8, "module-tryalgo.bfs"], [8, "module-tryalgo.biconnected_components"], [8, "module-tryalgo.binary_search"], [8, "module-tryalgo.bipartite_matching"], [8, "module-tryalgo.bipartite_vertex_cover"], [8, "module-tryalgo.closest_points"], [8, "module-tryalgo.closest_values"], [8, "module-tryalgo.convex_hull"], [8, "module-tryalgo.dancing_links"], [8, "module-tryalgo.dfs"], [8, "module-tryalgo.dijkstra"], [8, "module-tryalgo.dilworth"], [8, "module-tryalgo.dinic"], [8, "module-tryalgo.dist_grid"], [8, "module-tryalgo.edmonds_karp"], [8, "module-tryalgo.eulerian_tour"], [8, "module-tryalgo.fast_exponentiation"], [8, "module-tryalgo.fenwick"], [8, "module-tryalgo.fft"], [8, "module-tryalgo.floyd_warshall"], [8, "module-tryalgo.ford_fulkerson"], [8, "module-tryalgo.freivalds"], [8, "module-tryalgo.gale_shapley"], [8, "module-tryalgo.gauss_jordan"], [8, "module-tryalgo.graph"], [8, "module-tryalgo.graph01"], [8, "module-tryalgo.horn_sat"], [8, "module-tryalgo.huffman"], [8, "module-tryalgo.interval_cover"], [8, "module-tryalgo.interval_tree"], [8, "module-tryalgo.intervals_union"], [8, "module-tryalgo.karatsuba"], [8, "module-tryalgo.knapsack"], [8, "module-tryalgo.knuth_morris_pratt"], [8, "module-tryalgo.kruskal"], [8, "module-tryalgo.kuhn_munkres"], [8, "module-tryalgo.kuhn_munkres_n4"], [8, "module-tryalgo.laser_mirrors"], [8, "module-tryalgo.left_right_inversions"], [8, "module-tryalgo.levenshtein"], [8, "module-tryalgo.longest_common_subsequence"], [8, "module-tryalgo.longest_increasing_subsequence"], [8, "module-tryalgo.lowest_common_ancestor"], [8, "module-tryalgo.majority"], [8, "module-tryalgo.manacher"], [8, "module-tryalgo.matrix_chain_mult"], [8, "module-tryalgo.max_interval_intersec"], [8, "module-tryalgo.merge_ordered_lists"], [8, "module-tryalgo.min_mean_cycle"], [8, "module-tryalgo.next_permutation"], [8, "module-tryalgo.our_heap"], [8, "module-tryalgo.our_queue"], [8, "module-tryalgo.our_std"], [8, "module-tryalgo.pareto"], [8, "module-tryalgo.partition_refinement"], [8, "module-tryalgo.permutation_rank"], [8, "module-tryalgo.polygon"], [8, "module-tryalgo.predictive_text"], [8, "module-tryalgo.primes"], [8, "module-tryalgo.rabin_karp"], [8, "module-tryalgo.range_minimum_query"], [8, "module-tryalgo.rectangles_from_grid"], [8, "module-tryalgo.rectangles_from_histogram"], [8, "module-tryalgo.rectangles_from_points"], [8, "module-tryalgo.roman_numbers"], [8, "module-tryalgo.scalar"], [8, "module-tryalgo.shortest_cycle"], [8, "module-tryalgo.skip_list"], [8, "module-tryalgo.strongly_connected_components"], [8, "module-tryalgo.subsetsum"], [8, "module-tryalgo.subsetsum_divide"], [8, "module-tryalgo.sudoku"], [8, "module-tryalgo.three_partition"], [8, "module-tryalgo.topological_order"], [8, "module-tryalgo.trie"], [8, "module-tryalgo.two_sat"], [8, "module-tryalgo.union_rectangles"], [8, "module-tryalgo.windows_k_distinct"]], "mul_poly() (in module tryalgo.karatsuba)": [[8, "tryalgo.karatsuba.mul_poly"]], "mul_poly_fft() (in module tryalgo.fft)": [[8, "tryalgo.fft.mul_poly_fft"]], "next (tryalgo.skip_list.sorteddict.node attribute)": [[8, "tryalgo.skip_list.SortedDict.Node.next"]], "next (tryalgo.skip_list.sortedset.node attribute)": [[8, "tryalgo.skip_list.SortedSet.Node.next"]], "nextkey() (tryalgo.skip_list.abstractskiplist method)": [[8, "tryalgo.skip_list.AbstractSkipList.nextKey"]], "nextnode() (tryalgo.skip_list.abstractskiplist method)": [[8, "tryalgo.skip_list.AbstractSkipList.nextNode"]], "next_permutation() (in module tryalgo.next_permutation)": [[8, "tryalgo.next_permutation.next_permutation"]], "optimized_binary_search() (in module tryalgo.binary_search)": [[8, "tryalgo.binary_search.optimized_binary_search"]], "optimized_binary_search_lower() (in module tryalgo.binary_search)": [[8, "tryalgo.binary_search.optimized_binary_search_lower"]], "order() (tryalgo.partition_refinement.partitionrefinement method)": [[8, "tryalgo.partition_refinement.PartitionRefinement.order"]], "pad() (in module tryalgo.fft)": [[8, "tryalgo.fft.pad"]], "pareto2d() (in module tryalgo.pareto)": [[8, "tryalgo.pareto.pareto2d"]], "pareto3d() (in module tryalgo.pareto)": [[8, "tryalgo.pareto.pareto3d"]], "part_sum() (in module tryalgo.subsetsum_divide)": [[8, "tryalgo.subsetsum_divide.part_sum"]], "part_sum2() (in module tryalgo.subsetsum_divide)": [[8, "tryalgo.subsetsum_divide.part_sum2"]], "permutation_rank() (in module tryalgo.permutation_rank)": [[8, "tryalgo.permutation_rank.permutation_rank"]], "pgcd() (in module tryalgo.arithm)": [[8, "tryalgo.arithm.pgcd"]], "pop() (tryalgo.our_heap.ourheap method)": [[8, "tryalgo.our_heap.OurHeap.pop"]], "pop() (tryalgo.our_queue.ourqueue method)": [[8, "tryalgo.our_queue.OurQueue.pop"]], "pop() (tryalgo.skip_list.sortedset method)": [[8, "tryalgo.skip_list.SortedSet.pop"]], "powergraph() (in module tryalgo.shortest_cycle)": [[8, "tryalgo.shortest_cycle.powergraph"]], "powerstring_by_border() (in module tryalgo.knuth_morris_pratt)": [[8, "tryalgo.knuth_morris_pratt.powerstring_by_border"]], "powerstring_by_find() (in module tryalgo.knuth_morris_pratt)": [[8, "tryalgo.knuth_morris_pratt.powerstring_by_find"]], "predictive_text() (in module tryalgo.predictive_text)": [[8, "tryalgo.predictive_text.predictive_text"]], "prefixmin() (tryalgo.fenwick.fenwickmin method)": [[8, "tryalgo.fenwick.FenwickMin.prefixMin"]], "prefixsum() (tryalgo.fenwick.fenwick method)": [[8, "tryalgo.fenwick.Fenwick.prefixSum"]], "propose() (in module tryalgo.predictive_text)": [[8, "tryalgo.predictive_text.propose"]], "push() (tryalgo.our_heap.ourheap method)": [[8, "tryalgo.our_heap.OurHeap.push"]], "push() (tryalgo.our_queue.ourqueue method)": [[8, "tryalgo.our_queue.OurQueue.push"]], "query() (tryalgo.lowest_common_ancestor.lowestcommonancestorrmq method)": [[8, "tryalgo.lowest_common_ancestor.LowestCommonAncestorRMQ.query"]], "query() (tryalgo.lowest_common_ancestor.lowestcommonancestorshortcuts method)": [[8, "tryalgo.lowest_common_ancestor.LowestCommonAncestorShortcuts.query"]], "rabin_karp_factor() (in module tryalgo.rabin_karp)": [[8, "tryalgo.rabin_karp.rabin_karp_factor"]], "rabin_karp_matching() (in module tryalgo.rabin_karp)": [[8, "tryalgo.rabin_karp.rabin_karp_matching"]], "random() (in module tryalgo.skip_list)": [[8, "tryalgo.skip_list.random"]], "randomheight() (tryalgo.skip_list.abstractskiplist static method)": [[8, "tryalgo.skip_list.AbstractSkipList.randomHeight"]], "random_eulerien_graph() (in module tryalgo.eulerian_tour)": [[8, "tryalgo.eulerian_tour.random_eulerien_graph"]], "range_min() (tryalgo.range_minimum_query.rangeminquery method)": [[8, "tryalgo.range_minimum_query.RangeMinQuery.range_min"]], "rank_permutation() (in module tryalgo.permutation_rank)": [[8, "tryalgo.permutation_rank.rank_permutation"]], "read() (in module tryalgo.horn_sat)": [[8, "tryalgo.horn_sat.read"]], "read_graph() (in module tryalgo.graph)": [[8, "tryalgo.graph.read_graph"]], "readarray() (in module tryalgo.our_std)": [[8, "tryalgo.our_std.readarray"]], "readint() (in module tryalgo.our_std)": [[8, "tryalgo.our_std.readint"]], "readmatrix() (in module tryalgo.our_std)": [[8, "tryalgo.our_std.readmatrix"]], "readstr() (in module tryalgo.our_std)": [[8, "tryalgo.our_std.readstr"]], "readtab() (in module tryalgo.graph)": [[8, "tryalgo.graph.readtab"]], "readval() (in module tryalgo.graph)": [[8, "tryalgo.graph.readval"]], "rectangles_contains_point() (in module tryalgo.union_rectangles)": [[8, "tryalgo.union_rectangles.rectangles_contains_point"]], "rectangles_from_grid() (in module tryalgo.rectangles_from_grid)": [[8, "tryalgo.rectangles_from_grid.rectangles_from_grid"]], "rectangles_from_histogram() (in module tryalgo.rectangles_from_histogram)": [[8, "tryalgo.rectangles_from_histogram.rectangles_from_histogram"]], "rectangles_from_points() (in module tryalgo.rectangles_from_points)": [[8, "tryalgo.rectangles_from_points.rectangles_from_points"]], "refine() (tryalgo.partition_refinement.partitionrefinement method)": [[8, "tryalgo.partition_refinement.PartitionRefinement.refine"]], "remove() (tryalgo.skip_list.abstractskiplist method)": [[8, "tryalgo.skip_list.AbstractSkipList.remove"]], "reverse() (in module tryalgo.strongly_connected_components)": [[8, "tryalgo.strongly_connected_components.reverse"]], "roll_hash() (in module tryalgo.rabin_karp)": [[8, "tryalgo.rabin_karp.roll_hash"]], "roman2int() (in module tryalgo.roman_numbers)": [[8, "tryalgo.roman_numbers.roman2int"]], "search() (in module tryalgo.trie)": [[8, "tryalgo.trie.search"]], "set() (tryalgo.range_minimum_query.lazysegmenttree method)": [[8, "tryalgo.range_minimum_query.LazySegmentTree.set"]], "shortest_cycle() (in module tryalgo.shortest_cycle)": [[8, "tryalgo.shortest_cycle.shortest_cycle"]], "solve() (in module tryalgo.laser_mirrors)": [[8, "tryalgo.laser_mirrors.solve"]], "solve_word_addition() (in module tryalgo.next_permutation)": [[8, "tryalgo.next_permutation.solve_word_addition"]], "spell_check() (in module tryalgo.trie)": [[8, "tryalgo.trie.spell_check"]], "sub_poly() (in module tryalgo.karatsuba)": [[8, "tryalgo.karatsuba.sub_poly"]], "subset_sum() (in module tryalgo.subsetsum)": [[8, "tryalgo.subsetsum.subset_sum"]], "subset_sum() (in module tryalgo.subsetsum_divide)": [[8, "tryalgo.subsetsum_divide.subset_sum"]], "subset_sum2() (in module tryalgo.subsetsum_divide)": [[8, "tryalgo.subsetsum_divide.subset_sum2"]], "sudoku() (in module tryalgo.sudoku)": [[8, "tryalgo.sudoku.sudoku"]], "sum() (tryalgo.range_minimum_query.lazysegmenttree method)": [[8, "tryalgo.range_minimum_query.LazySegmentTree.sum"]], "tarjan() (in module tryalgo.strongly_connected_components)": [[8, "tryalgo.strongly_connected_components.tarjan"]], "tarjan_recursif() (in module tryalgo.strongly_connected_components)": [[8, "tryalgo.strongly_connected_components.tarjan_recursif"]], "ternary_search() (in module tryalgo.binary_search)": [[8, "tryalgo.binary_search.ternary_search"]], "three_partition() (in module tryalgo.three_partition)": [[8, "tryalgo.three_partition.three_partition"]], "tolist() (tryalgo.partition_refinement.partitionrefinement method)": [[8, "tryalgo.partition_refinement.PartitionRefinement.tolist"]], "topological_order() (in module tryalgo.topological_order)": [[8, "tryalgo.topological_order.topological_order"]], "topological_order_dfs() (in module tryalgo.topological_order)": [[8, "tryalgo.topological_order.topological_order_dfs"]], "tree_adj_to_prec() (in module tryalgo.graph)": [[8, "tryalgo.graph.tree_adj_to_prec"]], "tree_prec_to_adj() (in module tryalgo.graph)": [[8, "tryalgo.graph.tree_prec_to_adj"]], "tryalgo": [[8, "module-tryalgo"]], "tryalgo.anagrams": [[8, "module-tryalgo.anagrams"]], "tryalgo.arithm": [[8, "module-tryalgo.arithm"]], "tryalgo.arithm_expr_eval": [[8, "module-tryalgo.arithm_expr_eval"]], "tryalgo.arithm_expr_target": [[8, "module-tryalgo.arithm_expr_target"]], "tryalgo.bellman_ford": [[8, "module-tryalgo.bellman_ford"]], "tryalgo.bfs": [[8, "module-tryalgo.bfs"]], "tryalgo.biconnected_components": [[8, "module-tryalgo.biconnected_components"]], "tryalgo.binary_search": [[8, "module-tryalgo.binary_search"]], "tryalgo.bipartite_matching": [[8, "module-tryalgo.bipartite_matching"]], "tryalgo.bipartite_vertex_cover": [[8, "module-tryalgo.bipartite_vertex_cover"]], "tryalgo.closest_points": [[8, "module-tryalgo.closest_points"]], "tryalgo.closest_values": [[8, "module-tryalgo.closest_values"]], "tryalgo.convex_hull": [[8, "module-tryalgo.convex_hull"]], "tryalgo.dancing_links": [[8, "module-tryalgo.dancing_links"]], "tryalgo.dfs": [[8, "module-tryalgo.dfs"]], "tryalgo.dijkstra": [[8, "module-tryalgo.dijkstra"]], "tryalgo.dilworth": [[8, "module-tryalgo.dilworth"]], "tryalgo.dinic": [[8, "module-tryalgo.dinic"]], "tryalgo.dist_grid": [[8, "module-tryalgo.dist_grid"]], "tryalgo.edmonds_karp": [[8, "module-tryalgo.edmonds_karp"]], "tryalgo.eulerian_tour": [[8, "module-tryalgo.eulerian_tour"]], "tryalgo.fast_exponentiation": [[8, "module-tryalgo.fast_exponentiation"]], "tryalgo.fenwick": [[8, "module-tryalgo.fenwick"]], "tryalgo.fft": [[8, "module-tryalgo.fft"]], "tryalgo.floyd_warshall": [[8, "module-tryalgo.floyd_warshall"]], "tryalgo.ford_fulkerson": [[8, "module-tryalgo.ford_fulkerson"]], "tryalgo.freivalds": [[8, "module-tryalgo.freivalds"]], "tryalgo.gale_shapley": [[8, "module-tryalgo.gale_shapley"]], "tryalgo.gauss_jordan": [[8, "module-tryalgo.gauss_jordan"]], "tryalgo.graph": [[8, "module-tryalgo.graph"]], "tryalgo.graph01": [[8, "module-tryalgo.graph01"]], "tryalgo.horn_sat": [[8, "module-tryalgo.horn_sat"]], "tryalgo.huffman": [[8, "module-tryalgo.huffman"]], "tryalgo.interval_cover": [[8, "module-tryalgo.interval_cover"]], "tryalgo.interval_tree": [[8, "module-tryalgo.interval_tree"]], "tryalgo.intervals_union": [[8, "module-tryalgo.intervals_union"]], "tryalgo.karatsuba": [[8, "module-tryalgo.karatsuba"]], "tryalgo.knapsack": [[8, "module-tryalgo.knapsack"]], "tryalgo.knuth_morris_pratt": [[8, "module-tryalgo.knuth_morris_pratt"]], "tryalgo.kruskal": [[8, "module-tryalgo.kruskal"]], "tryalgo.kuhn_munkres": [[8, "module-tryalgo.kuhn_munkres"]], "tryalgo.kuhn_munkres_n4": [[8, "module-tryalgo.kuhn_munkres_n4"]], "tryalgo.laser_mirrors": [[8, "module-tryalgo.laser_mirrors"]], "tryalgo.left_right_inversions": [[8, "module-tryalgo.left_right_inversions"]], "tryalgo.levenshtein": [[8, "module-tryalgo.levenshtein"]], "tryalgo.longest_common_subsequence": [[8, "module-tryalgo.longest_common_subsequence"]], "tryalgo.longest_increasing_subsequence": [[8, "module-tryalgo.longest_increasing_subsequence"]], "tryalgo.lowest_common_ancestor": [[8, "module-tryalgo.lowest_common_ancestor"]], "tryalgo.majority": [[8, "module-tryalgo.majority"]], "tryalgo.manacher": [[8, "module-tryalgo.manacher"]], "tryalgo.matrix_chain_mult": [[8, "module-tryalgo.matrix_chain_mult"]], "tryalgo.max_interval_intersec": [[8, "module-tryalgo.max_interval_intersec"]], "tryalgo.merge_ordered_lists": [[8, "module-tryalgo.merge_ordered_lists"]], "tryalgo.min_mean_cycle": [[8, "module-tryalgo.min_mean_cycle"]], "tryalgo.next_permutation": [[8, "module-tryalgo.next_permutation"]], "tryalgo.our_heap": [[8, "module-tryalgo.our_heap"]], "tryalgo.our_queue": [[8, "module-tryalgo.our_queue"]], "tryalgo.our_std": [[8, "module-tryalgo.our_std"]], "tryalgo.pareto": [[8, "module-tryalgo.pareto"]], "tryalgo.partition_refinement": [[8, "module-tryalgo.partition_refinement"]], "tryalgo.permutation_rank": [[8, "module-tryalgo.permutation_rank"]], "tryalgo.polygon": [[8, "module-tryalgo.polygon"]], "tryalgo.predictive_text": [[8, "module-tryalgo.predictive_text"]], "tryalgo.primes": [[8, "module-tryalgo.primes"]], "tryalgo.rabin_karp": [[8, "module-tryalgo.rabin_karp"]], "tryalgo.range_minimum_query": [[8, "module-tryalgo.range_minimum_query"]], "tryalgo.rectangles_from_grid": [[8, "module-tryalgo.rectangles_from_grid"]], "tryalgo.rectangles_from_histogram": [[8, "module-tryalgo.rectangles_from_histogram"]], "tryalgo.rectangles_from_points": [[8, "module-tryalgo.rectangles_from_points"]], "tryalgo.roman_numbers": [[8, "module-tryalgo.roman_numbers"]], "tryalgo.scalar": [[8, "module-tryalgo.scalar"]], "tryalgo.shortest_cycle": [[8, "module-tryalgo.shortest_cycle"]], "tryalgo.skip_list": [[8, "module-tryalgo.skip_list"]], "tryalgo.strongly_connected_components": [[8, "module-tryalgo.strongly_connected_components"]], "tryalgo.subsetsum": [[8, "module-tryalgo.subsetsum"]], "tryalgo.subsetsum_divide": [[8, "module-tryalgo.subsetsum_divide"]], "tryalgo.sudoku": [[8, "module-tryalgo.sudoku"]], "tryalgo.three_partition": [[8, "module-tryalgo.three_partition"]], "tryalgo.topological_order": [[8, "module-tryalgo.topological_order"]], "tryalgo.trie": [[8, "module-tryalgo.trie"]], "tryalgo.two_sat": [[8, "module-tryalgo.two_sat"]], "tryalgo.union_rectangles": [[8, "module-tryalgo.union_rectangles"]], "tryalgo.windows_k_distinct": [[8, "module-tryalgo.windows_k_distinct"]], "two_sat() (in module tryalgo.two_sat)": [[8, "tryalgo.two_sat.two_sat"]], "union() (tryalgo.kruskal.unionfind method)": [[8, "tryalgo.kruskal.UnionFind.union"]], "union_intervals() (in module tryalgo.union_rectangles)": [[8, "tryalgo.union_rectangles.union_intervals"]], "union_rectangles() (in module tryalgo.union_rectangles)": [[8, "tryalgo.union_rectangles.union_rectangles"]], "union_rectangles_fast() (in module tryalgo.union_rectangles)": [[8, "tryalgo.union_rectangles.union_rectangles_fast"]], "union_rectangles_fastest() (in module tryalgo.union_rectangles)": [[8, "tryalgo.union_rectangles.union_rectangles_fastest"]], "union_rectangles_naive() (in module tryalgo.union_rectangles)": [[8, "tryalgo.union_rectangles.union_rectangles_naive"]], "up() (tryalgo.our_heap.ourheap method)": [[8, "tryalgo.our_heap.OurHeap.up"]], "update() (tryalgo.fenwick.fenwickmin method)": [[8, "tryalgo.fenwick.FenwickMin.update"]], "update() (tryalgo.our_heap.ourheap method)": [[8, "tryalgo.our_heap.OurHeap.update"]], "val (tryalgo.skip_list.sorteddict.node attribute)": [[8, "tryalgo.skip_list.SortedDict.Node.val"]], "windows_k_distinct() (in module tryalgo.windows_k_distinct)": [[8, "tryalgo.windows_k_distinct.windows_k_distinct"]], "write_cycle() (in module tryalgo.eulerian_tour)": [[8, "tryalgo.eulerian_tour.write_cycle"]], "write_graph() (in module tryalgo.graph)": [[8, "tryalgo.graph.write_graph"]]}})